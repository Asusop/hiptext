
#line 1 "pixel_parse.rl"
// -*- C++ -*-
// Complete CSS3/X11 Color Parser Implementation

#include "pixel.h"
#include <cstdlib>
#include <vector>
#include <glog/logging.h>


#line 13 "pixel_parse.cc"
static const short _pixel_color_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	8, 1, 9, 1, 10, 1, 11, 1, 
	12, 1, 13, 1, 14, 1, 15, 1, 
	16, 1, 17, 1, 18, 1, 19, 1, 
	20, 1, 21, 1, 22, 1, 23, 1, 
	24, 1, 25, 1, 26, 1, 27, 1, 
	28, 1, 29, 1, 30, 1, 31, 1, 
	32, 1, 33, 1, 34, 1, 35, 1, 
	36, 1, 37, 1, 38, 1, 39, 1, 
	40, 1, 41, 1, 42, 1, 43, 1, 
	44, 1, 45, 1, 46, 1, 47, 1, 
	48, 1, 49, 1, 50, 1, 51, 1, 
	52, 1, 53, 1, 54, 1, 55, 1, 
	56, 1, 57, 1, 58, 1, 59, 1, 
	60, 1, 61, 1, 62, 1, 63, 1, 
	64, 1, 65, 1, 66, 1, 67, 1, 
	68, 1, 69, 1, 70, 1, 71, 1, 
	72, 1, 73, 1, 74, 1, 75, 1, 
	76, 1, 77, 1, 78, 1, 79, 1, 
	80, 1, 81, 1, 82, 1, 83, 1, 
	84, 1, 85, 1, 86, 1, 87, 1, 
	88, 1, 89, 1, 90, 1, 91, 1, 
	92, 1, 93, 1, 94, 1, 95, 1, 
	96, 1, 97, 1, 98, 1, 99, 1, 
	100, 1, 101, 1, 102, 1, 103, 1, 
	104, 1, 105, 1, 106, 1, 107, 1, 
	108, 1, 109, 1, 110, 1, 111, 1, 
	112, 1, 113, 1, 114, 1, 115, 1, 
	116, 1, 117, 1, 118, 1, 119, 1, 
	120, 1, 121, 1, 122, 1, 123, 1, 
	124, 1, 125, 1, 126, 1, 127, 1, 
	128, 1, 129, 1, 130, 1, 131, 1, 
	132, 1, 133, 1, 134, 1, 135, 1, 
	136, 1, 137, 1, 138, 1, 139, 1, 
	140, 1, 141, 1, 142, 1, 143, 1, 
	144, 1, 145, 1, 146, 1, 147, 1, 
	148, 1, 149, 1, 150, 1, 151, 1, 
	152, 1, 153, 1, 154, 1, 155, 1, 
	156, 1, 157, 1, 158, 1, 159, 1, 
	160, 1, 161, 1, 162, 1, 163, 1, 
	164, 1, 165, 1, 166, 1, 167, 1, 
	168, 1, 169, 1, 170, 1, 171, 1, 
	172, 1, 173, 1, 174, 1, 175, 1, 
	176, 1, 177, 1, 178, 1, 179, 1, 
	180, 1, 181, 1, 182, 1, 183, 1, 
	184, 1, 185, 1, 186, 1, 187, 1, 
	188, 1, 189, 1, 190, 1, 191, 1, 
	192, 1, 193, 1, 194, 1, 195, 1, 
	196, 1, 197, 1, 198, 1, 199, 1, 
	200, 1, 201, 1, 202, 1, 203, 1, 
	204, 1, 205, 1, 206, 1, 207, 1, 
	208, 1, 209, 1, 210, 1, 211, 1, 
	212, 1, 213, 1, 214, 1, 215, 1, 
	216, 1, 217, 1, 218, 1, 219, 1, 
	220, 1, 221, 1, 222, 1, 223, 1, 
	224, 1, 225, 1, 226, 1, 227, 1, 
	228, 1, 229, 1, 230, 1, 231, 1, 
	232, 1, 233, 1, 234, 1, 235, 1, 
	236, 1, 237, 1, 238, 1, 239, 1, 
	240, 1, 241, 1, 242, 1, 243, 1, 
	244, 1, 245, 1, 246, 1, 247, 1, 
	248, 1, 249, 1, 250, 1, 251, 1, 
	252, 1, 253, 1, 254, 1, 255, 1, 
	256, 1, 257, 1, 258, 1, 259, 1, 
	260, 1, 261, 1, 262, 1, 263, 1, 
	264, 1, 265, 1, 266, 1, 267, 1, 
	268, 1, 269, 1, 270, 1, 271, 1, 
	272, 1, 273, 1, 274, 1, 275, 1, 
	276, 1, 277, 1, 278, 1, 279, 1, 
	280, 1, 281, 1, 282, 1, 283, 1, 
	284, 1, 285, 1, 286, 1, 287, 1, 
	288, 1, 289, 1, 290, 1, 291, 1, 
	292, 1, 293, 1, 294, 1, 295, 1, 
	296, 1, 297, 1, 298, 1, 299, 1, 
	300, 1, 301, 1, 302, 1, 303, 1, 
	304, 1, 305, 1, 306, 1, 307, 1, 
	308, 1, 309, 1, 310, 1, 311, 1, 
	312, 1, 313, 1, 314, 1, 315, 1, 
	316, 1, 317, 1, 318, 1, 319, 1, 
	320, 1, 321, 1, 322, 1, 323, 1, 
	324, 1, 325, 1, 326, 1, 327, 1, 
	328, 1, 329, 1, 330, 1, 331, 1, 
	332, 1, 333, 1, 334, 1, 335, 1, 
	336, 1, 337, 1, 338, 1, 339, 1, 
	340, 1, 341, 1, 342, 1, 343, 1, 
	344, 1, 345, 1, 346, 1, 347, 1, 
	348, 1, 349, 1, 350, 1, 351, 1, 
	352, 1, 353, 1, 354, 1, 355, 1, 
	356, 1, 357, 1, 358, 1, 359, 1, 
	360, 1, 361, 1, 362, 1, 363, 1, 
	364, 1, 365, 1, 366, 1, 367, 1, 
	368, 1, 369, 1, 370, 1, 371, 1, 
	372, 1, 373, 1, 374, 1, 375, 1, 
	376, 1, 377, 1, 378, 1, 379, 1, 
	380, 1, 381, 1, 382, 1, 383, 1, 
	384, 1, 385, 1, 386, 1, 387, 1, 
	388, 1, 389, 1, 390, 1, 391, 1, 
	392, 1, 393, 1, 394, 1, 395, 1, 
	396, 1, 397, 1, 398, 1, 399, 1, 
	400, 1, 401, 1, 402, 1, 403, 1, 
	404, 1, 405, 1, 406, 1, 407, 1, 
	408, 1, 409, 1, 410, 1, 411, 1, 
	412, 1, 413, 1, 414, 1, 415, 1, 
	416, 1, 417, 1, 418, 1, 419, 1, 
	420, 1, 421, 1, 422, 1, 423, 1, 
	424, 1, 425, 1, 426, 1, 427, 1, 
	428, 1, 429, 1, 430, 1, 431, 1, 
	432, 1, 433, 1, 434, 1, 435, 1, 
	436, 1, 437, 1, 438, 1, 439, 1, 
	440, 1, 441, 1, 442, 1, 443, 1, 
	444, 1, 445, 1, 446, 1, 447, 1, 
	448, 1, 449, 1, 450, 1, 451, 1, 
	452, 1, 453, 1, 454, 1, 455, 1, 
	456, 1, 457, 1, 458, 1, 459, 1, 
	460, 1, 461, 1, 462, 1, 463, 1, 
	464, 1, 465, 1, 466, 1, 467, 1, 
	468, 1, 469, 1, 470, 1, 471, 1, 
	472, 1, 473, 1, 474, 1, 475, 1, 
	476, 1, 477, 1, 478, 1, 479, 1, 
	480, 1, 481, 1, 482, 1, 483, 1, 
	484, 1, 485, 1, 486, 1, 487, 1, 
	488, 1, 489, 1, 490, 1, 491, 1, 
	492, 1, 493, 1, 494, 1, 495, 1, 
	496, 1, 497, 1, 498, 1, 499, 1, 
	500, 1, 501, 1, 502, 1, 503, 1, 
	504, 1, 505, 1, 506, 1, 507, 1, 
	508, 1, 509, 1, 510, 1, 511, 1, 
	512, 1, 513, 1, 514, 1, 515, 1, 
	516, 1, 517, 1, 518, 1, 519, 1, 
	520, 1, 521, 1, 522, 1, 523, 1, 
	524, 1, 525, 1, 526, 1, 527, 1, 
	528, 1, 529, 1, 530, 1, 531, 1, 
	532, 1, 533, 1, 534, 1, 535, 1, 
	536, 1, 537, 1, 538, 1, 539, 1, 
	540, 1, 541, 1, 542, 1, 543, 1, 
	544, 1, 545, 1, 546, 1, 547, 1, 
	548, 1, 549, 1, 550, 1, 551, 1, 
	552, 1, 553, 1, 554, 1, 555, 1, 
	556, 1, 557, 1, 558, 1, 559, 1, 
	560, 1, 561, 1, 562, 1, 563, 1, 
	564, 1, 565, 1, 566, 1, 567, 1, 
	568, 1, 569, 1, 570, 1, 571, 1, 
	572, 1, 573, 1, 574, 1, 575, 1, 
	576, 1, 577, 1, 578, 1, 579, 1, 
	580, 1, 581, 1, 582, 1, 583, 1, 
	584, 1, 585, 1, 586, 1, 587, 1, 
	588, 1, 589, 1, 590, 1, 591, 1, 
	592, 1, 593, 1, 594, 1, 595, 1, 
	596, 1, 597, 1, 598, 1, 599, 1, 
	600, 1, 601, 1, 602, 1, 603, 1, 
	604, 1, 605, 1, 606, 1, 607, 1, 
	608, 1, 609, 1, 610, 1, 611, 1, 
	612, 1, 613, 1, 614, 1, 615, 1, 
	616, 1, 617, 1, 618, 1, 619, 1, 
	620, 1, 621, 1, 622, 1, 623, 1, 
	624, 1, 625, 1, 626, 1, 627, 1, 
	628, 1, 629, 1, 630, 1, 631, 1, 
	632, 1, 633, 1, 634, 1, 635, 1, 
	636, 1, 637, 1, 638, 1, 639, 1, 
	640, 1, 641, 1, 642, 1, 643, 1, 
	644, 1, 645, 1, 646, 1, 647, 1, 
	648, 1, 649, 1, 650, 1, 651, 1, 
	652, 1, 653, 1, 654, 1, 655, 1, 
	656, 1, 657, 1, 658, 1, 659, 1, 
	660, 1, 661, 1, 662, 1, 663, 1, 
	664, 1, 665, 1, 666, 1, 667, 1, 
	668, 1, 669, 2, 5, 6, 2, 7, 
	8
};

static const short _pixel_color_key_offsets[] = {
	0, 0, 41, 47, 53, 59, 65, 71, 
	77, 85, 87, 89, 91, 93, 95, 97, 
	99, 101, 103, 105, 107, 109, 111, 113, 
	115, 117, 119, 121, 123, 125, 127, 129, 
	131, 133, 135, 137, 139, 141, 151, 153, 
	155, 157, 159, 161, 163, 165, 169, 173, 
	175, 177, 179, 181, 183, 185, 187, 189, 
	191, 193, 195, 197, 199, 201, 203, 205, 
	207, 209, 211, 213, 215, 217, 219, 221, 
	223, 225, 227, 235, 237, 239, 241, 243, 
	245, 247, 249, 253, 255, 257, 259, 261, 
	263, 265, 267, 269, 271, 273, 275, 277, 
	279, 281, 285, 287, 291, 293, 295, 297, 
	299, 301, 303, 305, 307, 309, 311, 313, 
	315, 317, 319, 327, 329, 331, 351, 353, 
	355, 357, 359, 361, 363, 367, 369, 371, 
	373, 375, 377, 379, 381, 385, 387, 391, 
	393, 395, 397, 399, 401, 403, 405, 407, 
	409, 411, 413, 417, 419, 421, 423, 425, 
	427, 429, 431, 433, 437, 439, 441, 443, 
	445, 447, 449, 451, 453, 459, 461, 463, 
	465, 467, 469, 471, 473, 475, 477, 479, 
	481, 483, 485, 489, 491, 493, 495, 497, 
	501, 503, 505, 507, 509, 511, 513, 515, 
	517, 519, 521, 523, 525, 527, 529, 531, 
	533, 535, 539, 541, 543, 545, 547, 549, 
	551, 553, 555, 557, 559, 561, 563, 567, 
	569, 571, 573, 575, 577, 579, 581, 583, 
	585, 587, 593, 595, 597, 599, 601, 603, 
	605, 607, 609, 611, 613, 615, 617, 619, 
	621, 623, 625, 627, 629, 631, 633, 635, 
	637, 639, 641, 643, 651, 653, 655, 657, 
	659, 661, 663, 665, 667, 669, 671, 673, 
	675, 677, 679, 681, 683, 685, 687, 689, 
	691, 693, 697, 699, 703, 705, 707, 709, 
	711, 713, 715, 719, 723, 725, 727, 729, 
	731, 733, 735, 737, 739, 741, 743, 746, 
	752, 754, 760, 764, 770, 772, 778, 782, 
	788, 790, 796, 800, 807, 811, 818, 822, 
	829, 833, 834, 840, 842, 848, 852, 858, 
	860, 866, 870, 876, 878, 884, 888, 899, 
	908, 912, 914, 920, 927, 931, 938, 942, 
	949, 953, 957, 959, 961, 963, 965, 967, 
	969, 971, 973, 975, 977, 979, 981, 983, 
	985, 991, 995, 997, 999, 1001, 1003, 1005, 
	1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 
	1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 
	1039, 1041, 1043, 1045, 1051, 1053, 1055, 1067, 
	1069, 1071, 1073, 1077, 1079, 1081, 1083, 1085, 
	1087, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 
	1105, 1107, 1109, 1111, 1113, 1115, 1119, 1121, 
	1125, 1127, 1129, 1131, 1133, 1143, 1145, 1147, 
	1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 
	1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 
	1183, 1185, 1187, 1189, 1191, 1195, 1197, 1199, 
	1201, 1203, 1205, 1207, 1209, 1211, 1213, 1215, 
	1217, 1219, 1221, 1223, 1225, 1227, 1229, 1231, 
	1233, 1235, 1237, 1239, 1247, 1251, 1253, 1255, 
	1257, 1259, 1261, 1263, 1265, 1267, 1269, 1271, 
	1273, 1287, 1289, 1291, 1293, 1295, 1297, 1299, 
	1301, 1303, 1305, 1307, 1309, 1311, 1313, 1315, 
	1317, 1319, 1321, 1323, 1325, 1327, 1329, 1331, 
	1337, 1339, 1341, 1343, 1345, 1347, 1349, 1351, 
	1353, 1355, 1357, 1359, 1361, 1363, 1365, 1367, 
	1369, 1371, 1373, 1375, 1377, 1379, 1381, 1383, 
	1385, 1387, 1389, 1391, 1393, 1395, 1397, 1399, 
	1401, 1403, 1405, 1407, 1409, 1411, 1413, 1419, 
	1421, 1423, 1425, 1427, 1429, 1431, 1433, 1435, 
	1437, 1439, 1441, 1443, 1445, 1447, 1449, 1451, 
	1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 
	1469, 1471, 1473, 1475, 1477, 1481, 1483, 1485, 
	1487, 1489, 1491, 1493, 1495, 1497, 1499, 1501, 
	1505, 1509, 1511, 1513, 1515, 1517, 1519, 1521, 
	1523, 1525, 1527, 1529, 1533, 1535, 1537, 1539, 
	1541, 1543, 1545, 1547, 1549, 1561, 1565, 1567, 
	1573, 1577, 1579, 1581, 1583, 1585, 1587, 1589, 
	1591, 1593, 1595, 1597, 1599, 1601, 1603, 1605, 
	1607, 1609, 1611, 1613, 1615, 1617, 1619, 1621, 
	1623, 1625, 1627, 1629, 1631, 1633, 1635, 1637, 
	1639, 1641, 1643, 1647, 1649, 1651, 1653, 1655, 
	1657, 1659, 1661, 1663, 1665, 1667, 1669, 1671, 
	1673, 1675, 1677, 1679, 1681, 1683, 1685, 1687, 
	1689, 1691, 1693, 1699, 1701, 1703, 1706, 1712, 
	1714, 1720, 1724, 1730, 1732, 1738, 1742, 1748, 
	1750, 1756, 1760, 1767, 1771, 1778, 1782, 1789, 
	1793, 1794, 1800, 1802, 1808, 1812, 1818, 1820, 
	1826, 1830, 1836, 1838, 1844, 1848, 1859, 1868, 
	1872, 1874, 1880, 1887, 1891, 1898, 1902, 1909, 
	1913, 1917, 1919, 1921, 1923, 1925, 1927, 1929, 
	1931, 1933, 1935, 1937, 1939, 1941, 1957, 1963, 
	1965, 1967, 1969, 1971, 1973, 1975, 1977, 1979, 
	1981, 1983, 1985, 1987, 1989, 1991, 1993, 1995, 
	1997, 1999, 2001, 2005, 2007, 2009, 2011, 2013, 
	2015, 2017, 2019, 2021, 2023, 2025, 2027, 2029, 
	2031, 2033, 2035, 2037, 2039, 2041, 2043, 2045, 
	2049, 2051, 2053, 2055, 2057, 2061, 2063, 2065, 
	2067, 2069, 2071, 2073, 2075, 2077, 2079, 2081, 
	2083, 2085, 2087, 2089, 2091, 2093, 2095, 2097, 
	2099, 2101, 2111, 2113, 2115, 2117, 2119, 2121, 
	2123, 2125, 2127, 2129, 2131, 2133, 2135, 2137, 
	2139, 2141, 2143, 2145, 2147, 2149, 2151, 2153, 
	2155, 2157, 2159, 2161, 2163, 2165, 2167, 2169, 
	2171, 2173, 2175, 2177, 2179, 2183, 2185, 2187, 
	2189, 2191, 2193, 2195, 2197, 2199, 2201, 2203, 
	2205, 2207, 2209, 2211, 2213, 2215, 2217, 2223, 
	2229, 2229, 2229, 2233, 2233, 2233, 2233, 2233, 
	2237, 2237, 2237, 2237, 2237, 2241, 2241, 2241, 
	2241, 2241, 2241, 2245, 2245, 2245, 2245, 2245, 
	2245, 2245, 2251, 2251, 2251, 2251, 2251, 2251, 
	2255, 2255, 2255, 2255, 2255, 2259, 2259, 2259, 
	2259, 2259, 2263, 2263, 2263, 2263, 2263, 2267, 
	2267, 2267, 2267, 2267, 2271, 2271, 2271, 2271, 
	2271, 2275, 2275, 2275, 2275, 2275, 2275, 2279, 
	2279, 2279, 2279, 2279, 2283, 2283, 2283, 2283, 
	2283, 2283, 2283, 2287, 2287, 2287, 2287, 2287, 
	2287, 2287, 2287, 2287, 2287, 2291, 2291, 2291, 
	2291, 2291, 2295, 2295, 2295, 2295, 2295, 2299, 
	2299, 2299, 2299, 2299, 2299, 2299, 2303, 2303, 
	2303, 2303, 2303, 2303, 2307, 2307, 2307, 2307, 
	2307, 2307, 2307, 2307, 2311, 2311, 2311, 2311, 
	2311, 2315, 2315, 2315, 2315, 2315, 2315, 2315, 
	2319, 2319, 2319, 2319, 2319, 2323, 2323, 2323, 
	2323, 2323, 2323, 2323, 2323, 2323, 2329, 2329, 
	2329, 2329, 2329, 2333, 2333, 2333, 2333, 2333, 
	2343, 2343, 2353, 2354, 2354, 2354, 2354, 2354, 
	2354, 2354, 2354, 2354, 2354, 2354, 2364, 2364, 
	2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364, 
	2364, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 
	2374, 2374, 2374, 2374, 2384, 2384, 2384, 2384, 
	2384, 2384, 2384, 2384, 2384, 2384, 2384, 2394, 
	2394, 2394, 2394, 2394, 2394, 2394, 2394, 2394, 
	2394, 2394, 2404, 2404, 2404, 2404, 2404, 2404, 
	2404, 2404, 2404, 2404, 2404, 2414, 2414, 2414, 
	2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414, 
	2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424, 
	2424, 2424, 2424, 2434, 2434, 2434, 2434, 2434, 
	2434, 2434, 2434, 2434, 2434, 2434, 2440, 2440, 
	2440, 2440, 2440, 2440, 2450, 2450, 2460, 2461, 
	2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461, 
	2461, 2461, 2471, 2471, 2471, 2471, 2471, 2471, 
	2471, 2471, 2471, 2471, 2471, 2481, 2481, 2481, 
	2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 
	2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 
	2491, 2491, 2491, 2501, 2501, 2501, 2501, 2501, 
	2501, 2501, 2501, 2501, 2501, 2501, 2511, 2511, 
	2511, 2511, 2511, 2511, 2511, 2511, 2511, 2511, 
	2511, 2521, 2521, 2521, 2521, 2521, 2521, 2521, 
	2521, 2521, 2521, 2521, 2531, 2531, 2531, 2531, 
	2531, 2531, 2531, 2531, 2531, 2531, 2531, 2541, 
	2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 
	2541, 2541, 2545, 2545, 2545, 2545, 2545, 2549, 
	2549, 2549, 2549, 2549, 2549, 2553, 2553, 2553, 
	2553, 2553, 2557, 2557, 2557, 2557, 2557, 2561, 
	2561, 2561, 2561, 2561, 2563, 2567, 2567, 2567, 
	2567, 2567, 2567, 2571, 2571, 2571, 2571, 2571, 
	2575, 2575, 2575, 2575, 2575, 2575, 2579, 2579, 
	2579, 2579, 2579, 2585, 2585, 2585, 2585, 2585, 
	2585, 2585, 2585, 2585, 2589, 2589, 2589, 2589, 
	2589, 2593, 2593, 2593, 2593, 2593, 2593, 2597, 
	2597, 2597, 2597, 2597, 2597, 2597, 2597, 2601, 
	2601, 2601, 2601, 2601, 2605, 2605, 2605, 2605, 
	2605, 2605, 2605, 2609, 2609, 2609, 2609, 2609, 
	2613, 2613, 2613, 2613, 2613, 2613, 2613, 2617, 
	2617, 2617, 2617, 2617, 2621, 2621, 2621, 2621, 
	2621, 2621, 2621, 2621, 2621, 2621, 2621, 2621, 
	2625, 2625, 2625, 2625, 2625, 2625, 2629, 2629, 
	2629, 2629, 2629, 2631, 2631, 2631, 2635, 2635, 
	2635, 2635, 2635, 2641, 2641, 2641, 2641, 2641, 
	2645, 2645, 2645, 2645, 2645, 2649, 2649, 2649, 
	2649, 2649, 2649, 2653, 2653, 2653, 2653, 2653, 
	2657, 2657, 2657, 2657, 2657, 2661, 2661, 2661, 
	2661, 2661, 2661, 2665, 2665, 2665, 2665, 2665, 
	2665, 2669, 2669, 2669, 2669, 2669, 2673, 2673, 
	2673, 2673, 2673, 2673, 2677, 2677, 2677, 2677, 
	2677, 2681, 2681, 2681, 2681, 2681, 2681, 2685, 
	2685, 2685, 2685, 2685, 2689, 2689, 2689, 2689, 
	2689, 2689, 2693, 2693, 2693, 2693, 2693, 2693, 
	2697, 2697, 2697, 2697, 2697, 2701, 2701, 2701, 
	2701, 2701, 2705, 2705, 2705, 2705, 2705, 2709, 
	2709, 2709, 2709, 2709, 2713, 2713, 2713, 2713, 
	2713, 2717, 2717, 2717, 2717, 2717, 2717, 2721, 
	2721, 2721, 2721, 2721, 2725, 2725, 2725, 2725, 
	2725, 2729, 2729, 2729, 2729, 2729, 2733, 2733, 
	2733, 2733, 2733, 2737, 2737, 2737, 2737, 2737, 
	2741, 2741, 2741, 2741, 2741, 2741, 2745, 2745, 
	2745, 2745, 2745, 2747, 2751, 2751, 2751, 2751, 
	2751, 2755, 2755, 2755, 2755, 2755, 2757, 2757, 
	2763, 2763, 2763, 2763, 2763
};

static const char _pixel_color_trans_keys[] = {
	35, 65, 66, 67, 68, 70, 71, 72, 
	73, 75, 76, 77, 78, 79, 80, 82, 
	83, 84, 86, 87, 89, 97, 98, 99, 
	100, 102, 103, 104, 105, 107, 108, 109, 
	110, 111, 112, 114, 115, 116, 118, 119, 
	121, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 76, 78, 81, 
	90, 108, 110, 113, 122, 73, 105, 67, 
	99, 69, 101, 66, 98, 76, 108, 85, 
	117, 69, 101, 84, 116, 73, 105, 81, 
	113, 85, 117, 69, 101, 87, 119, 72, 
	104, 73, 105, 84, 116, 69, 101, 85, 
	117, 65, 97, 77, 109, 65, 97, 82, 
	114, 73, 105, 78, 110, 69, 101, 85, 
	117, 82, 114, 69, 101, 69, 73, 76, 
	82, 85, 101, 105, 108, 114, 117, 73, 
	105, 71, 103, 69, 101, 83, 115, 81, 
	113, 85, 117, 69, 101, 65, 85, 97, 
	117, 67, 78, 99, 110, 75, 107, 67, 
	99, 72, 104, 69, 101, 68, 100, 65, 
	97, 76, 108, 77, 109, 79, 111, 78, 
	110, 68, 100, 69, 101, 73, 105, 79, 
	111, 76, 108, 69, 101, 84, 116, 79, 
	111, 87, 119, 78, 110, 82, 114, 76, 
	108, 89, 121, 87, 119, 79, 111, 79, 
	111, 68, 100, 65, 72, 79, 89, 97, 
	104, 111, 121, 68, 100, 69, 101, 84, 
	116, 66, 98, 76, 108, 85, 117, 69, 
	101, 65, 79, 97, 111, 82, 114, 84, 
	116, 82, 114, 69, 101, 85, 117, 83, 
	115, 69, 101, 67, 99, 79, 111, 76, 
	108, 65, 97, 84, 116, 69, 101, 82, 
	114, 65, 78, 97, 110, 76, 108, 70, 
	83, 102, 115, 76, 108, 79, 111, 87, 
	119, 69, 101, 82, 114, 66, 98, 76, 
	108, 85, 117, 69, 101, 73, 105, 76, 
	108, 75, 107, 65, 97, 78, 110, 65, 
	69, 73, 79, 97, 101, 105, 111, 82, 
	114, 75, 107, 66, 67, 71, 75, 77, 
	79, 82, 83, 84, 86, 98, 99, 103, 
	107, 109, 111, 114, 115, 116, 118, 76, 
	108, 85, 117, 69, 101, 89, 121, 65, 
	97, 78, 110, 79, 82, 111, 114, 76, 
	108, 68, 100, 69, 101, 78, 110, 82, 
	114, 79, 111, 68, 100, 65, 69, 97, 
	101, 89, 121, 69, 89, 101, 121, 78, 
	110, 72, 104, 65, 97, 75, 107, 73, 
	105, 65, 97, 71, 103, 69, 101, 78, 
	110, 84, 116, 65, 97, 76, 82, 108, 
	114, 73, 105, 86, 118, 69, 101, 71, 
	103, 82, 114, 69, 101, 69, 101, 78, 
	110, 65, 67, 97, 99, 78, 110, 71, 
	103, 69, 101, 72, 104, 73, 105, 68, 
	100, 69, 101, 68, 100, 65, 69, 76, 
	97, 101, 108, 76, 108, 77, 109, 79, 
	111, 78, 110, 65, 97, 71, 103, 82, 
	114, 69, 101, 69, 101, 78, 110, 65, 
	97, 84, 116, 69, 101, 66, 71, 98, 
	103, 76, 108, 85, 117, 69, 101, 82, 
	114, 65, 69, 97, 101, 89, 121, 89, 
	121, 85, 117, 82, 114, 81, 113, 85, 
	117, 79, 111, 73, 105, 83, 115, 69, 
	101, 73, 105, 79, 111, 76, 108, 69, 
	101, 84, 116, 69, 101, 80, 112, 80, 
	83, 112, 115, 73, 105, 78, 110, 75, 
	107, 75, 107, 89, 121, 66, 98, 76, 
	108, 85, 117, 69, 101, 77, 109, 71, 
	103, 82, 114, 65, 69, 97, 101, 89, 
	121, 89, 121, 68, 100, 71, 103, 69, 
	101, 82, 114, 66, 98, 76, 108, 85, 
	117, 69, 101, 73, 76, 79, 105, 108, 
	111, 82, 114, 69, 101, 66, 98, 82, 
	114, 73, 105, 67, 99, 75, 107, 79, 
	111, 82, 114, 65, 97, 76, 108, 87, 
	119, 72, 104, 73, 105, 84, 116, 69, 
	101, 82, 114, 69, 101, 83, 115, 84, 
	116, 71, 103, 82, 114, 69, 101, 69, 
	101, 78, 110, 65, 72, 79, 82, 97, 
	104, 111, 114, 73, 105, 78, 110, 83, 
	115, 66, 98, 79, 111, 82, 114, 79, 
	111, 79, 111, 83, 115, 84, 116, 87, 
	119, 72, 104, 73, 105, 84, 116, 69, 
	101, 76, 108, 68, 100, 78, 110, 82, 
	114, 79, 111, 68, 100, 65, 69, 97, 
	101, 89, 121, 69, 89, 101, 121, 78, 
	110, 69, 101, 76, 108, 76, 108, 79, 
	111, 87, 119, 79, 83, 111, 115, 78, 
	84, 110, 116, 69, 101, 89, 121, 68, 
	100, 69, 101, 87, 119, 80, 112, 73, 
	105, 78, 110, 75, 107, 76, 108, 40, 
	65, 97, 32, 45, 9, 13, 48, 57, 
	48, 57, 32, 44, 9, 13, 48, 57, 
	32, 44, 9, 13, 32, 45, 9, 13, 
	48, 57, 48, 57, 32, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 45, 
	9, 13, 48, 57, 48, 57, 32, 41, 
	9, 13, 48, 57, 32, 41, 9, 13, 
	32, 37, 41, 9, 13, 48, 57, 32, 
	41, 9, 13, 32, 37, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 37, 
	44, 9, 13, 48, 57, 32, 44, 9, 
	13, 40, 32, 45, 9, 13, 48, 57, 
	48, 57, 32, 44, 9, 13, 48, 57, 
	32, 44, 9, 13, 32, 45, 9, 13, 
	48, 57, 48, 57, 32, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 45, 
	9, 13, 48, 57, 48, 57, 32, 44, 
	9, 13, 48, 57, 32, 44, 9, 13, 
	32, 41, 43, 69, 101, 9, 13, 45, 
	46, 48, 57, 32, 41, 46, 69, 101, 
	9, 13, 48, 57, 43, 45, 48, 57, 
	48, 57, 32, 41, 9, 13, 48, 57, 
	32, 37, 44, 9, 13, 48, 57, 32, 
	44, 9, 13, 32, 37, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 37, 
	44, 9, 13, 48, 57, 32, 44, 9, 
	13, 78, 86, 110, 118, 68, 100, 73, 
	105, 65, 97, 78, 110, 82, 114, 69, 
	101, 68, 100, 79, 111, 82, 114, 89, 
	121, 72, 104, 65, 97, 75, 107, 73, 
	105, 65, 69, 73, 97, 101, 105, 86, 
	87, 118, 119, 69, 101, 78, 110, 68, 
	100, 69, 101, 82, 114, 76, 108, 85, 
	117, 83, 115, 72, 104, 78, 110, 71, 
	103, 82, 114, 69, 101, 69, 101, 78, 
	110, 77, 109, 79, 111, 78, 110, 67, 
	99, 72, 104, 73, 105, 70, 102, 70, 
	102, 79, 111, 78, 110, 71, 77, 78, 
	103, 109, 110, 72, 104, 84, 116, 66, 
	67, 71, 80, 83, 89, 98, 99, 103, 
	112, 115, 121, 76, 108, 85, 117, 69, 
	101, 79, 89, 111, 121, 82, 114, 65, 
	97, 76, 108, 65, 97, 78, 110, 79, 
	82, 111, 114, 76, 108, 68, 100, 69, 
	101, 78, 110, 82, 114, 79, 111, 68, 
	100, 69, 101, 76, 108, 76, 108, 79, 
	111, 87, 119, 65, 69, 97, 101, 89, 
	121, 69, 89, 101, 121, 78, 110, 73, 
	105, 78, 110, 75, 107, 65, 69, 75, 
	76, 84, 97, 101, 107, 108, 116, 76, 
	108, 77, 109, 79, 111, 78, 110, 65, 
	97, 71, 103, 82, 114, 69, 101, 69, 
	101, 78, 110, 89, 121, 66, 98, 76, 
	108, 85, 117, 69, 101, 65, 97, 84, 
	116, 69, 101, 66, 71, 98, 103, 76, 
	108, 85, 117, 69, 101, 82, 114, 65, 
	69, 97, 101, 89, 121, 89, 121, 69, 
	101, 69, 101, 76, 108, 66, 98, 76, 
	108, 85, 117, 69, 101, 69, 101, 76, 
	108, 76, 108, 79, 111, 87, 119, 69, 
	101, 71, 103, 82, 114, 69, 101, 69, 
	101, 78, 110, 69, 101, 78, 110, 65, 
	69, 73, 79, 97, 101, 105, 111, 71, 
	82, 103, 114, 69, 101, 78, 110, 84, 
	116, 65, 97, 79, 111, 79, 111, 78, 
	110, 68, 100, 73, 105, 85, 117, 77, 
	109, 65, 66, 79, 80, 83, 84, 86, 
	97, 98, 111, 112, 115, 116, 118, 81, 
	113, 85, 117, 65, 97, 77, 109, 65, 
	97, 82, 114, 73, 105, 78, 110, 69, 
	101, 76, 108, 85, 117, 69, 101, 82, 
	114, 67, 99, 72, 104, 73, 105, 68, 
	100, 85, 117, 82, 114, 80, 112, 76, 
	108, 69, 101, 69, 76, 80, 101, 108, 
	112, 65, 97, 71, 103, 82, 114, 69, 
	101, 69, 101, 78, 110, 65, 97, 84, 
	116, 69, 101, 66, 98, 76, 108, 85, 
	117, 69, 101, 82, 114, 73, 105, 78, 
	110, 71, 103, 71, 103, 82, 114, 69, 
	101, 69, 101, 78, 110, 85, 117, 82, 
	114, 81, 113, 85, 117, 79, 111, 73, 
	105, 83, 115, 69, 101, 73, 105, 79, 
	111, 76, 108, 69, 101, 84, 116, 82, 
	114, 69, 101, 68, 100, 68, 78, 83, 
	100, 110, 115, 78, 110, 73, 105, 71, 
	103, 72, 104, 84, 116, 66, 98, 76, 
	108, 85, 117, 69, 101, 84, 116, 67, 
	99, 82, 114, 69, 101, 65, 97, 77, 
	109, 84, 116, 89, 121, 82, 114, 79, 
	111, 83, 115, 69, 101, 67, 99, 67, 
	99, 65, 97, 83, 115, 73, 105, 78, 
	110, 65, 97, 86, 118, 65, 89, 97, 
	121, 74, 106, 79, 111, 87, 119, 72, 
	104, 73, 105, 84, 116, 69, 101, 76, 
	108, 85, 117, 69, 101, 76, 82, 108, 
	114, 68, 73, 100, 105, 76, 108, 65, 
	97, 67, 99, 69, 101, 86, 118, 69, 
	101, 68, 100, 82, 114, 65, 97, 66, 
	98, 65, 67, 97, 99, 78, 110, 71, 
	103, 69, 101, 69, 101, 68, 100, 72, 
	104, 73, 105, 68, 100, 65, 69, 73, 
	76, 79, 85, 97, 101, 105, 108, 111, 
	117, 76, 80, 108, 112, 69, 101, 71, 
	84, 86, 103, 116, 118, 79, 82, 111, 
	114, 76, 108, 68, 100, 69, 101, 78, 
	110, 82, 114, 79, 111, 68, 100, 69, 
	101, 69, 101, 78, 110, 85, 117, 82, 
	114, 81, 113, 85, 117, 79, 111, 73, 
	105, 83, 115, 69, 101, 73, 105, 79, 
	111, 76, 108, 69, 101, 84, 116, 82, 
	114, 69, 101, 68, 100, 65, 97, 89, 
	121, 65, 97, 87, 119, 72, 104, 73, 
	105, 80, 112, 65, 82, 97, 114, 67, 
	99, 72, 104, 80, 112, 85, 117, 70, 
	102, 70, 102, 85, 117, 78, 110, 75, 
	107, 85, 117, 77, 109, 87, 119, 68, 
	100, 69, 101, 82, 114, 66, 98, 76, 
	108, 85, 117, 69, 101, 82, 114, 80, 
	112, 76, 108, 69, 101, 69, 71, 79, 
	101, 103, 111, 68, 100, 66, 98, 40, 
	65, 97, 32, 45, 9, 13, 48, 57, 
	48, 57, 32, 44, 9, 13, 48, 57, 
	32, 44, 9, 13, 32, 45, 9, 13, 
	48, 57, 48, 57, 32, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 45, 
	9, 13, 48, 57, 48, 57, 32, 41, 
	9, 13, 48, 57, 32, 41, 9, 13, 
	32, 37, 41, 9, 13, 48, 57, 32, 
	41, 9, 13, 32, 37, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 37, 
	44, 9, 13, 48, 57, 32, 44, 9, 
	13, 40, 32, 45, 9, 13, 48, 57, 
	48, 57, 32, 44, 9, 13, 48, 57, 
	32, 44, 9, 13, 32, 45, 9, 13, 
	48, 57, 48, 57, 32, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 45, 
	9, 13, 48, 57, 48, 57, 32, 44, 
	9, 13, 48, 57, 32, 44, 9, 13, 
	32, 41, 43, 69, 101, 9, 13, 45, 
	46, 48, 57, 32, 41, 46, 69, 101, 
	9, 13, 48, 57, 43, 45, 48, 57, 
	48, 57, 32, 41, 9, 13, 48, 57, 
	32, 37, 44, 9, 13, 48, 57, 32, 
	44, 9, 13, 32, 37, 44, 9, 13, 
	48, 57, 32, 44, 9, 13, 32, 37, 
	44, 9, 13, 48, 57, 32, 44, 9, 
	13, 83, 89, 115, 121, 89, 121, 66, 
	98, 82, 114, 79, 111, 87, 119, 78, 
	110, 65, 97, 76, 108, 66, 98, 76, 
	108, 85, 117, 69, 101, 65, 69, 73, 
	75, 76, 78, 80, 84, 97, 101, 105, 
	107, 108, 110, 112, 116, 68, 76, 78, 
	100, 108, 110, 68, 100, 76, 108, 69, 
	101, 66, 98, 82, 114, 79, 111, 87, 
	119, 78, 110, 77, 109, 79, 111, 78, 
	110, 68, 100, 89, 121, 66, 98, 82, 
	114, 79, 111, 87, 119, 78, 110, 65, 
	97, 71, 83, 103, 115, 82, 114, 69, 
	101, 69, 101, 78, 110, 72, 104, 69, 
	101, 76, 108, 76, 108, 69, 101, 78, 
	110, 78, 110, 65, 97, 89, 121, 66, 
	98, 76, 108, 85, 117, 69, 101, 65, 
	97, 84, 116, 69, 101, 66, 71, 98, 
	103, 76, 108, 85, 117, 69, 101, 82, 
	114, 65, 69, 97, 101, 89, 121, 89, 
	121, 79, 111, 87, 119, 82, 114, 73, 
	105, 78, 110, 71, 103, 71, 103, 82, 
	114, 69, 101, 69, 101, 78, 110, 69, 
	101, 69, 101, 76, 108, 66, 98, 76, 
	108, 85, 117, 69, 101, 65, 72, 79, 
	82, 85, 97, 104, 111, 114, 117, 78, 
	110, 73, 105, 83, 115, 84, 116, 76, 
	108, 69, 101, 77, 109, 65, 97, 84, 
	116, 79, 111, 65, 97, 78, 110, 83, 
	115, 80, 112, 65, 97, 82, 114, 69, 
	101, 78, 110, 84, 116, 82, 114, 81, 
	113, 85, 117, 79, 111, 73, 105, 83, 
	115, 69, 101, 73, 105, 79, 111, 76, 
	108, 69, 101, 84, 116, 69, 101, 68, 
	100, 72, 104, 69, 73, 101, 105, 65, 
	97, 84, 116, 84, 116, 69, 101, 77, 
	109, 79, 111, 75, 107, 69, 101, 69, 
	101, 76, 108, 76, 108, 79, 111, 87, 
	119, 82, 114, 69, 101, 69, 101, 78, 
	110, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 86, 118, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 69, 
	101, 49, 50, 51, 52, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 48, 48, 49, 50, 51, 52, 53, 
	54, 55, 56, 57, 48, 49, 50, 51, 
	52, 53, 54, 55, 56, 57, 48, 49, 
	50, 51, 52, 53, 54, 55, 56, 57, 
	48, 49, 50, 51, 52, 53, 54, 55, 
	56, 57, 48, 49, 50, 51, 52, 53, 
	54, 55, 56, 57, 48, 49, 50, 51, 
	52, 53, 54, 55, 56, 57, 48, 49, 
	50, 51, 52, 53, 54, 55, 56, 57, 
	48, 49, 50, 51, 52, 53, 54, 55, 
	56, 57, 49, 50, 51, 52, 89, 121, 
	48, 49, 50, 51, 52, 53, 54, 55, 
	56, 57, 48, 49, 50, 51, 52, 53, 
	54, 55, 56, 57, 48, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 48, 49, 50, 51, 52, 53, 54, 
	55, 56, 57, 48, 49, 50, 51, 52, 
	53, 54, 55, 56, 57, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 57, 48, 
	49, 50, 51, 52, 53, 54, 55, 56, 
	57, 48, 49, 50, 51, 52, 53, 54, 
	55, 56, 57, 48, 49, 50, 51, 52, 
	53, 54, 55, 56, 57, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 66, 98, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 49, 
	50, 51, 52, 49, 50, 51, 52, 89, 
	121, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 66, 98, 49, 
	50, 51, 52, 49, 50, 51, 52, 82, 
	114, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 49, 50, 51, 52, 49, 50, 51, 
	52, 82, 114, 49, 50, 51, 52, 49, 
	50, 51, 52, 83, 115, 49, 50, 51, 
	52, 71, 103, 0
};

static const char _pixel_color_single_lengths[] = {
	0, 41, 0, 0, 0, 0, 0, 0, 
	8, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 10, 2, 2, 
	2, 2, 2, 2, 2, 4, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 8, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 8, 2, 2, 20, 2, 2, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 4, 2, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 6, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 4, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 6, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 8, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 4, 2, 4, 2, 2, 2, 2, 
	2, 2, 4, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 3, 2, 
	0, 2, 2, 2, 0, 2, 2, 2, 
	0, 2, 2, 3, 2, 3, 2, 3, 
	2, 1, 2, 0, 2, 2, 2, 0, 
	2, 2, 2, 0, 2, 2, 5, 5, 
	2, 0, 2, 3, 2, 3, 2, 3, 
	2, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	6, 4, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 6, 2, 2, 12, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 4, 2, 4, 
	2, 2, 2, 2, 10, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 8, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	14, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 6, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 6, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 4, 2, 2, 2, 2, 
	2, 2, 2, 2, 12, 4, 2, 6, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 6, 2, 2, 3, 2, 0, 
	2, 2, 2, 0, 2, 2, 2, 0, 
	2, 2, 3, 2, 3, 2, 3, 2, 
	1, 2, 0, 2, 2, 2, 0, 2, 
	2, 2, 0, 2, 2, 5, 5, 2, 
	0, 2, 3, 2, 3, 2, 3, 2, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 16, 6, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 4, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 10, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 4, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 0, 
	0, 6, 0, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 0, 0, 0, 0, 6, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 10, 
	0, 10, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 10, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	10, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 10, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 10, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 10, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 10, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 10, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 10, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 6, 0, 0, 
	0, 0, 0, 10, 0, 10, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 10, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 10, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 10, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 10, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 10, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	10, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 10, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 10, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 2, 4, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 6, 0, 0, 0, 0, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 2, 0, 0, 4, 0, 0, 
	0, 0, 6, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 4, 0, 0, 0, 
	0, 4, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 0, 4, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 4, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 0, 4, 0, 0, 
	0, 0, 2, 4, 0, 0, 0, 0, 
	4, 0, 0, 0, 0, 2, 0, 6, 
	0, 0, 0, 0, 0
};

static const char _pixel_color_range_lengths[] = {
	0, 0, 3, 3, 3, 3, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	1, 2, 1, 2, 1, 2, 1, 2, 
	1, 2, 1, 2, 1, 2, 1, 2, 
	1, 0, 2, 1, 2, 1, 2, 1, 
	2, 1, 2, 1, 2, 1, 3, 2, 
	1, 1, 2, 2, 1, 2, 1, 2, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 1, 
	2, 1, 2, 1, 2, 1, 2, 1, 
	2, 1, 2, 1, 2, 1, 2, 1, 
	0, 2, 1, 2, 1, 2, 1, 2, 
	1, 2, 1, 2, 1, 3, 2, 1, 
	1, 2, 2, 1, 2, 1, 2, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};

static const short _pixel_color_index_offsets[] = {
	0, 0, 42, 46, 50, 54, 58, 62, 
	66, 75, 78, 81, 84, 87, 90, 93, 
	96, 99, 102, 105, 108, 111, 114, 117, 
	120, 123, 126, 129, 132, 135, 138, 141, 
	144, 147, 150, 153, 156, 159, 170, 173, 
	176, 179, 182, 185, 188, 191, 196, 201, 
	204, 207, 210, 213, 216, 219, 222, 225, 
	228, 231, 234, 237, 240, 243, 246, 249, 
	252, 255, 258, 261, 264, 267, 270, 273, 
	276, 279, 282, 291, 294, 297, 300, 303, 
	306, 309, 312, 317, 320, 323, 326, 329, 
	332, 335, 338, 341, 344, 347, 350, 353, 
	356, 359, 364, 367, 372, 375, 378, 381, 
	384, 387, 390, 393, 396, 399, 402, 405, 
	408, 411, 414, 423, 426, 429, 450, 453, 
	456, 459, 462, 465, 468, 473, 476, 479, 
	482, 485, 488, 491, 494, 499, 502, 507, 
	510, 513, 516, 519, 522, 525, 528, 531, 
	534, 537, 540, 545, 548, 551, 554, 557, 
	560, 563, 566, 569, 574, 577, 580, 583, 
	586, 589, 592, 595, 598, 605, 608, 611, 
	614, 617, 620, 623, 626, 629, 632, 635, 
	638, 641, 644, 649, 652, 655, 658, 661, 
	666, 669, 672, 675, 678, 681, 684, 687, 
	690, 693, 696, 699, 702, 705, 708, 711, 
	714, 717, 722, 725, 728, 731, 734, 737, 
	740, 743, 746, 749, 752, 755, 758, 763, 
	766, 769, 772, 775, 778, 781, 784, 787, 
	790, 793, 800, 803, 806, 809, 812, 815, 
	818, 821, 824, 827, 830, 833, 836, 839, 
	842, 845, 848, 851, 854, 857, 860, 863, 
	866, 869, 872, 875, 884, 887, 890, 893, 
	896, 899, 902, 905, 908, 911, 914, 917, 
	920, 923, 926, 929, 932, 935, 938, 941, 
	944, 947, 952, 955, 960, 963, 966, 969, 
	972, 975, 978, 983, 988, 991, 994, 997, 
	1000, 1003, 1006, 1009, 1012, 1015, 1018, 1022, 
	1027, 1029, 1034, 1038, 1043, 1045, 1050, 1054, 
	1059, 1061, 1066, 1070, 1076, 1080, 1086, 1090, 
	1096, 1100, 1102, 1107, 1109, 1114, 1118, 1123, 
	1125, 1130, 1134, 1139, 1141, 1146, 1150, 1159, 
	1167, 1171, 1173, 1178, 1184, 1188, 1194, 1198, 
	1204, 1208, 1213, 1216, 1219, 1222, 1225, 1228, 
	1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 
	1255, 1262, 1267, 1270, 1273, 1276, 1279, 1282, 
	1285, 1288, 1291, 1294, 1297, 1300, 1303, 1306, 
	1309, 1312, 1315, 1318, 1321, 1324, 1327, 1330, 
	1333, 1336, 1339, 1342, 1349, 1352, 1355, 1368, 
	1371, 1374, 1377, 1382, 1385, 1388, 1391, 1394, 
	1397, 1402, 1405, 1408, 1411, 1414, 1417, 1420, 
	1423, 1426, 1429, 1432, 1435, 1438, 1443, 1446, 
	1451, 1454, 1457, 1460, 1463, 1474, 1477, 1480, 
	1483, 1486, 1489, 1492, 1495, 1498, 1501, 1504, 
	1507, 1510, 1513, 1516, 1519, 1522, 1525, 1528, 
	1533, 1536, 1539, 1542, 1545, 1550, 1553, 1556, 
	1559, 1562, 1565, 1568, 1571, 1574, 1577, 1580, 
	1583, 1586, 1589, 1592, 1595, 1598, 1601, 1604, 
	1607, 1610, 1613, 1616, 1625, 1630, 1633, 1636, 
	1639, 1642, 1645, 1648, 1651, 1654, 1657, 1660, 
	1663, 1678, 1681, 1684, 1687, 1690, 1693, 1696, 
	1699, 1702, 1705, 1708, 1711, 1714, 1717, 1720, 
	1723, 1726, 1729, 1732, 1735, 1738, 1741, 1744, 
	1751, 1754, 1757, 1760, 1763, 1766, 1769, 1772, 
	1775, 1778, 1781, 1784, 1787, 1790, 1793, 1796, 
	1799, 1802, 1805, 1808, 1811, 1814, 1817, 1820, 
	1823, 1826, 1829, 1832, 1835, 1838, 1841, 1844, 
	1847, 1850, 1853, 1856, 1859, 1862, 1865, 1872, 
	1875, 1878, 1881, 1884, 1887, 1890, 1893, 1896, 
	1899, 1902, 1905, 1908, 1911, 1914, 1917, 1920, 
	1923, 1926, 1929, 1932, 1935, 1938, 1941, 1944, 
	1947, 1950, 1953, 1956, 1959, 1964, 1967, 1970, 
	1973, 1976, 1979, 1982, 1985, 1988, 1991, 1994, 
	1999, 2004, 2007, 2010, 2013, 2016, 2019, 2022, 
	2025, 2028, 2031, 2034, 2039, 2042, 2045, 2048, 
	2051, 2054, 2057, 2060, 2063, 2076, 2081, 2084, 
	2091, 2096, 2099, 2102, 2105, 2108, 2111, 2114, 
	2117, 2120, 2123, 2126, 2129, 2132, 2135, 2138, 
	2141, 2144, 2147, 2150, 2153, 2156, 2159, 2162, 
	2165, 2168, 2171, 2174, 2177, 2180, 2183, 2186, 
	2189, 2192, 2195, 2200, 2203, 2206, 2209, 2212, 
	2215, 2218, 2221, 2224, 2227, 2230, 2233, 2236, 
	2239, 2242, 2245, 2248, 2251, 2254, 2257, 2260, 
	2263, 2266, 2269, 2276, 2279, 2282, 2286, 2291, 
	2293, 2298, 2302, 2307, 2309, 2314, 2318, 2323, 
	2325, 2330, 2334, 2340, 2344, 2350, 2354, 2360, 
	2364, 2366, 2371, 2373, 2378, 2382, 2387, 2389, 
	2394, 2398, 2403, 2405, 2410, 2414, 2423, 2431, 
	2435, 2437, 2442, 2448, 2452, 2458, 2462, 2468, 
	2472, 2477, 2480, 2483, 2486, 2489, 2492, 2495, 
	2498, 2501, 2504, 2507, 2510, 2513, 2530, 2537, 
	2540, 2543, 2546, 2549, 2552, 2555, 2558, 2561, 
	2564, 2567, 2570, 2573, 2576, 2579, 2582, 2585, 
	2588, 2591, 2594, 2599, 2602, 2605, 2608, 2611, 
	2614, 2617, 2620, 2623, 2626, 2629, 2632, 2635, 
	2638, 2641, 2644, 2647, 2650, 2653, 2656, 2659, 
	2664, 2667, 2670, 2673, 2676, 2681, 2684, 2687, 
	2690, 2693, 2696, 2699, 2702, 2705, 2708, 2711, 
	2714, 2717, 2720, 2723, 2726, 2729, 2732, 2735, 
	2738, 2741, 2752, 2755, 2758, 2761, 2764, 2767, 
	2770, 2773, 2776, 2779, 2782, 2785, 2788, 2791, 
	2794, 2797, 2800, 2803, 2806, 2809, 2812, 2815, 
	2818, 2821, 2824, 2827, 2830, 2833, 2836, 2839, 
	2842, 2845, 2848, 2851, 2854, 2859, 2862, 2865, 
	2868, 2871, 2874, 2877, 2880, 2883, 2886, 2889, 
	2892, 2895, 2898, 2901, 2904, 2907, 2910, 2914, 
	2918, 2919, 2920, 2925, 2926, 2927, 2928, 2929, 
	2934, 2935, 2936, 2937, 2938, 2943, 2944, 2945, 
	2946, 2947, 2948, 2953, 2954, 2955, 2956, 2957, 
	2958, 2959, 2966, 2967, 2968, 2969, 2970, 2971, 
	2976, 2977, 2978, 2979, 2980, 2985, 2986, 2987, 
	2988, 2989, 2994, 2995, 2996, 2997, 2998, 3003, 
	3004, 3005, 3006, 3007, 3012, 3013, 3014, 3015, 
	3016, 3021, 3022, 3023, 3024, 3025, 3026, 3031, 
	3032, 3033, 3034, 3035, 3040, 3041, 3042, 3043, 
	3044, 3045, 3046, 3051, 3052, 3053, 3054, 3055, 
	3056, 3057, 3058, 3059, 3060, 3065, 3066, 3067, 
	3068, 3069, 3074, 3075, 3076, 3077, 3078, 3083, 
	3084, 3085, 3086, 3087, 3088, 3089, 3094, 3095, 
	3096, 3097, 3098, 3099, 3104, 3105, 3106, 3107, 
	3108, 3109, 3110, 3111, 3116, 3117, 3118, 3119, 
	3120, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 
	3136, 3137, 3138, 3139, 3140, 3145, 3146, 3147, 
	3148, 3149, 3150, 3151, 3152, 3153, 3160, 3161, 
	3162, 3163, 3164, 3169, 3170, 3171, 3172, 3173, 
	3184, 3185, 3196, 3198, 3199, 3200, 3201, 3202, 
	3203, 3204, 3205, 3206, 3207, 3208, 3219, 3220, 
	3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 
	3229, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 
	3247, 3248, 3249, 3250, 3261, 3262, 3263, 3264, 
	3265, 3266, 3267, 3268, 3269, 3270, 3271, 3282, 
	3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 
	3291, 3292, 3303, 3304, 3305, 3306, 3307, 3308, 
	3309, 3310, 3311, 3312, 3313, 3324, 3325, 3326, 
	3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 
	3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 
	3353, 3354, 3355, 3366, 3367, 3368, 3369, 3370, 
	3371, 3372, 3373, 3374, 3375, 3376, 3383, 3384, 
	3385, 3386, 3387, 3388, 3399, 3400, 3411, 3413, 
	3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 
	3422, 3423, 3434, 3435, 3436, 3437, 3438, 3439, 
	3440, 3441, 3442, 3443, 3444, 3455, 3456, 3457, 
	3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 
	3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 
	3484, 3485, 3486, 3497, 3498, 3499, 3500, 3501, 
	3502, 3503, 3504, 3505, 3506, 3507, 3518, 3519, 
	3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 
	3528, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 
	3546, 3547, 3548, 3549, 3560, 3561, 3562, 3563, 
	3564, 3565, 3566, 3567, 3568, 3569, 3570, 3581, 
	3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 
	3590, 3591, 3596, 3597, 3598, 3599, 3600, 3605, 
	3606, 3607, 3608, 3609, 3610, 3615, 3616, 3617, 
	3618, 3619, 3624, 3625, 3626, 3627, 3628, 3633, 
	3634, 3635, 3636, 3637, 3640, 3645, 3646, 3647, 
	3648, 3649, 3650, 3655, 3656, 3657, 3658, 3659, 
	3664, 3665, 3666, 3667, 3668, 3669, 3674, 3675, 
	3676, 3677, 3678, 3685, 3686, 3687, 3688, 3689, 
	3690, 3691, 3692, 3693, 3698, 3699, 3700, 3701, 
	3702, 3707, 3708, 3709, 3710, 3711, 3712, 3717, 
	3718, 3719, 3720, 3721, 3722, 3723, 3724, 3729, 
	3730, 3731, 3732, 3733, 3738, 3739, 3740, 3741, 
	3742, 3743, 3744, 3749, 3750, 3751, 3752, 3753, 
	3758, 3759, 3760, 3761, 3762, 3763, 3764, 3769, 
	3770, 3771, 3772, 3773, 3778, 3779, 3780, 3781, 
	3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 
	3794, 3795, 3796, 3797, 3798, 3799, 3804, 3805, 
	3806, 3807, 3808, 3811, 3812, 3813, 3818, 3819, 
	3820, 3821, 3822, 3829, 3830, 3831, 3832, 3833, 
	3838, 3839, 3840, 3841, 3842, 3847, 3848, 3849, 
	3850, 3851, 3852, 3857, 3858, 3859, 3860, 3861, 
	3866, 3867, 3868, 3869, 3870, 3875, 3876, 3877, 
	3878, 3879, 3880, 3885, 3886, 3887, 3888, 3889, 
	3890, 3895, 3896, 3897, 3898, 3899, 3904, 3905, 
	3906, 3907, 3908, 3909, 3914, 3915, 3916, 3917, 
	3918, 3923, 3924, 3925, 3926, 3927, 3928, 3933, 
	3934, 3935, 3936, 3937, 3942, 3943, 3944, 3945, 
	3946, 3947, 3952, 3953, 3954, 3955, 3956, 3957, 
	3962, 3963, 3964, 3965, 3966, 3971, 3972, 3973, 
	3974, 3975, 3980, 3981, 3982, 3983, 3984, 3989, 
	3990, 3991, 3992, 3993, 3998, 3999, 4000, 4001, 
	4002, 4007, 4008, 4009, 4010, 4011, 4012, 4017, 
	4018, 4019, 4020, 4021, 4026, 4027, 4028, 4029, 
	4030, 4035, 4036, 4037, 4038, 4039, 4044, 4045, 
	4046, 4047, 4048, 4053, 4054, 4055, 4056, 4057, 
	4062, 4063, 4064, 4065, 4066, 4067, 4072, 4073, 
	4074, 4075, 4076, 4079, 4084, 4085, 4086, 4087, 
	4088, 4093, 4094, 4095, 4096, 4097, 4100, 4101, 
	4108, 4109, 4110, 4111, 4112
};

static const short _pixel_color_indicies[] = {
	0, 2, 3, 4, 5, 6, 7, 8, 
	9, 10, 11, 12, 13, 14, 15, 16, 
	17, 18, 19, 20, 21, 2, 3, 4, 
	5, 6, 7, 8, 9, 10, 11, 12, 
	13, 14, 15, 16, 17, 18, 19, 20, 
	21, 1, 22, 22, 22, 1, 23, 23, 
	23, 1, 24, 24, 24, 1, 25, 25, 
	25, 1, 26, 26, 26, 1, 27, 27, 
	27, 1, 28, 29, 30, 31, 28, 29, 
	30, 31, 1, 32, 32, 1, 33, 33, 
	1, 34, 34, 1, 35, 35, 1, 36, 
	36, 1, 37, 37, 1, 38, 38, 1, 
	39, 39, 1, 40, 40, 1, 41, 41, 
	1, 42, 42, 1, 43, 43, 1, 44, 
	44, 1, 45, 45, 1, 46, 46, 1, 
	47, 47, 1, 48, 48, 1, 49, 49, 
	1, 50, 50, 1, 51, 51, 1, 52, 
	52, 1, 53, 53, 1, 54, 54, 1, 
	55, 55, 1, 56, 56, 1, 57, 57, 
	1, 58, 58, 1, 59, 59, 1, 60, 
	61, 62, 63, 64, 60, 61, 62, 63, 
	64, 1, 65, 65, 1, 66, 66, 1, 
	67, 67, 1, 68, 68, 1, 69, 69, 
	1, 70, 70, 1, 71, 71, 1, 72, 
	73, 72, 73, 1, 74, 75, 74, 75, 
	1, 76, 76, 1, 77, 77, 1, 78, 
	78, 1, 79, 79, 1, 80, 80, 1, 
	81, 81, 1, 82, 82, 1, 83, 83, 
	1, 84, 84, 1, 85, 85, 1, 86, 
	86, 1, 87, 87, 1, 88, 88, 1, 
	89, 89, 1, 90, 90, 1, 91, 91, 
	1, 92, 92, 1, 93, 93, 1, 94, 
	94, 1, 95, 95, 1, 96, 96, 1, 
	97, 97, 1, 98, 98, 1, 99, 99, 
	1, 100, 100, 1, 101, 101, 1, 102, 
	102, 1, 103, 104, 105, 106, 103, 104, 
	105, 106, 1, 107, 107, 1, 108, 108, 
	1, 109, 109, 1, 110, 110, 1, 111, 
	111, 1, 112, 112, 1, 113, 113, 1, 
	114, 115, 114, 115, 1, 116, 116, 1, 
	117, 117, 1, 118, 118, 1, 119, 119, 
	1, 120, 120, 1, 121, 121, 1, 122, 
	122, 1, 123, 123, 1, 124, 124, 1, 
	125, 125, 1, 126, 126, 1, 127, 127, 
	1, 128, 128, 1, 129, 129, 1, 130, 
	131, 130, 131, 1, 132, 132, 1, 133, 
	134, 133, 134, 1, 135, 135, 1, 136, 
	136, 1, 137, 137, 1, 138, 138, 1, 
	139, 139, 1, 140, 140, 1, 141, 141, 
	1, 142, 142, 1, 143, 143, 1, 144, 
	144, 1, 145, 145, 1, 146, 146, 1, 
	147, 147, 1, 148, 148, 1, 149, 150, 
	151, 152, 149, 150, 151, 152, 1, 153, 
	153, 1, 154, 154, 1, 155, 156, 157, 
	158, 159, 160, 161, 162, 163, 164, 155, 
	156, 157, 158, 159, 160, 161, 162, 163, 
	164, 1, 165, 165, 1, 166, 166, 1, 
	167, 167, 1, 168, 168, 1, 169, 169, 
	1, 170, 170, 1, 171, 172, 171, 172, 
	1, 173, 173, 1, 174, 174, 1, 175, 
	175, 1, 176, 176, 1, 177, 177, 1, 
	178, 178, 1, 179, 179, 1, 180, 181, 
	180, 181, 1, 182, 182, 1, 183, 184, 
	183, 184, 1, 185, 185, 1, 186, 186, 
	1, 187, 187, 1, 188, 188, 1, 189, 
	189, 1, 190, 190, 1, 191, 191, 1, 
	192, 192, 1, 193, 193, 1, 194, 194, 
	1, 195, 195, 1, 196, 197, 196, 197, 
	1, 198, 198, 1, 199, 199, 1, 200, 
	200, 1, 201, 201, 1, 202, 202, 1, 
	203, 203, 1, 204, 204, 1, 205, 205, 
	1, 206, 207, 206, 207, 1, 208, 208, 
	1, 209, 209, 1, 210, 210, 1, 211, 
	211, 1, 212, 212, 1, 213, 213, 1, 
	214, 214, 1, 215, 215, 1, 216, 217, 
	218, 216, 217, 218, 1, 219, 219, 1, 
	220, 220, 1, 221, 221, 1, 222, 222, 
	1, 223, 223, 1, 224, 224, 1, 225, 
	225, 1, 226, 226, 1, 227, 227, 1, 
	228, 228, 1, 229, 229, 1, 230, 230, 
	1, 231, 231, 1, 232, 233, 232, 233, 
	1, 234, 234, 1, 235, 235, 1, 236, 
	236, 1, 237, 237, 1, 238, 239, 238, 
	239, 1, 240, 240, 1, 241, 241, 1, 
	242, 242, 1, 243, 243, 1, 244, 244, 
	1, 245, 245, 1, 246, 246, 1, 247, 
	247, 1, 248, 248, 1, 249, 249, 1, 
	250, 250, 1, 251, 251, 1, 252, 252, 
	1, 253, 253, 1, 254, 254, 1, 255, 
	255, 1, 256, 256, 1, 257, 258, 257, 
	258, 1, 259, 259, 1, 260, 260, 1, 
	261, 261, 1, 262, 262, 1, 263, 263, 
	1, 264, 264, 1, 265, 265, 1, 266, 
	266, 1, 267, 267, 1, 268, 268, 1, 
	269, 269, 1, 270, 270, 1, 271, 272, 
	271, 272, 1, 273, 273, 1, 274, 274, 
	1, 275, 275, 1, 276, 276, 1, 277, 
	277, 1, 278, 278, 1, 279, 279, 1, 
	280, 280, 1, 281, 281, 1, 282, 282, 
	1, 283, 284, 285, 283, 284, 285, 1, 
	286, 286, 1, 287, 287, 1, 288, 288, 
	1, 289, 289, 1, 290, 290, 1, 291, 
	291, 1, 292, 292, 1, 293, 293, 1, 
	294, 294, 1, 295, 295, 1, 296, 296, 
	1, 297, 297, 1, 298, 298, 1, 299, 
	299, 1, 300, 300, 1, 301, 301, 1, 
	302, 302, 1, 303, 303, 1, 304, 304, 
	1, 305, 305, 1, 306, 306, 1, 307, 
	307, 1, 308, 308, 1, 309, 309, 1, 
	310, 310, 1, 311, 312, 313, 314, 311, 
	312, 313, 314, 1, 315, 315, 1, 316, 
	316, 1, 317, 317, 1, 318, 318, 1, 
	319, 319, 1, 320, 320, 1, 321, 321, 
	1, 322, 322, 1, 323, 323, 1, 324, 
	324, 1, 325, 325, 1, 326, 326, 1, 
	327, 327, 1, 328, 328, 1, 329, 329, 
	1, 330, 330, 1, 331, 331, 1, 332, 
	332, 1, 333, 333, 1, 334, 334, 1, 
	335, 335, 1, 336, 337, 336, 337, 1, 
	338, 338, 1, 339, 340, 339, 340, 1, 
	341, 341, 1, 342, 342, 1, 343, 343, 
	1, 344, 344, 1, 345, 345, 1, 346, 
	346, 1, 347, 348, 347, 348, 1, 349, 
	350, 349, 350, 1, 351, 351, 1, 352, 
	352, 1, 353, 353, 1, 354, 354, 1, 
	355, 355, 1, 356, 356, 1, 357, 357, 
	1, 358, 358, 1, 359, 359, 1, 360, 
	360, 1, 361, 362, 362, 1, 361, 363, 
	361, 364, 1, 365, 1, 366, 367, 366, 
	368, 1, 369, 370, 369, 1, 370, 371, 
	370, 372, 1, 373, 1, 374, 375, 374, 
	376, 1, 377, 378, 377, 1, 378, 379, 
	378, 380, 1, 381, 1, 382, 383, 382, 
	384, 1, 385, 386, 385, 1, 387, 388, 
	389, 387, 390, 1, 391, 392, 391, 1, 
	393, 394, 395, 393, 396, 1, 397, 398, 
	397, 1, 399, 400, 401, 399, 402, 1, 
	403, 404, 403, 1, 405, 1, 405, 406, 
	405, 407, 1, 408, 1, 409, 410, 409, 
	411, 1, 412, 413, 412, 1, 413, 414, 
	413, 415, 1, 416, 1, 417, 418, 417, 
	419, 1, 420, 421, 420, 1, 421, 422, 
	421, 423, 1, 424, 1, 425, 426, 425, 
	427, 1, 428, 429, 428, 1, 430, 431, 
	432, 433, 433, 430, 432, 432, 1, 434, 
	435, 436, 437, 437, 434, 436, 1, 438, 
	438, 439, 1, 439, 1, 434, 435, 434, 
	439, 1, 440, 441, 442, 440, 443, 1, 
	444, 445, 444, 1, 446, 447, 448, 446, 
	449, 1, 450, 451, 450, 1, 452, 453, 
	454, 452, 455, 1, 456, 457, 456, 1, 
	458, 459, 458, 459, 1, 460, 460, 1, 
	461, 461, 1, 462, 462, 1, 463, 463, 
	1, 464, 464, 1, 465, 465, 1, 466, 
	466, 1, 467, 467, 1, 468, 468, 1, 
	469, 469, 1, 470, 470, 1, 471, 471, 
	1, 472, 472, 1, 473, 473, 1, 474, 
	475, 476, 474, 475, 476, 1, 477, 478, 
	477, 478, 1, 479, 479, 1, 480, 480, 
	1, 481, 481, 1, 482, 482, 1, 483, 
	483, 1, 484, 484, 1, 485, 485, 1, 
	486, 486, 1, 487, 487, 1, 488, 488, 
	1, 489, 489, 1, 490, 490, 1, 491, 
	491, 1, 492, 492, 1, 493, 493, 1, 
	494, 494, 1, 495, 495, 1, 496, 496, 
	1, 497, 497, 1, 498, 498, 1, 499, 
	499, 1, 500, 500, 1, 501, 501, 1, 
	502, 502, 1, 503, 503, 1, 504, 505, 
	506, 504, 505, 506, 1, 507, 507, 1, 
	508, 508, 1, 509, 510, 511, 512, 513, 
	514, 509, 510, 511, 512, 513, 514, 1, 
	515, 515, 1, 516, 516, 1, 517, 517, 
	1, 518, 519, 518, 519, 1, 520, 520, 
	1, 521, 521, 1, 522, 522, 1, 523, 
	523, 1, 524, 524, 1, 525, 526, 525, 
	526, 1, 527, 527, 1, 528, 528, 1, 
	529, 529, 1, 530, 530, 1, 531, 531, 
	1, 532, 532, 1, 533, 533, 1, 534, 
	534, 1, 535, 535, 1, 536, 536, 1, 
	537, 537, 1, 538, 538, 1, 539, 540, 
	539, 540, 1, 541, 541, 1, 542, 543, 
	542, 543, 1, 544, 544, 1, 545, 545, 
	1, 546, 546, 1, 547, 547, 1, 548, 
	549, 550, 551, 552, 548, 549, 550, 551, 
	552, 1, 553, 553, 1, 554, 554, 1, 
	555, 555, 1, 556, 556, 1, 557, 557, 
	1, 558, 558, 1, 559, 559, 1, 560, 
	560, 1, 561, 561, 1, 562, 562, 1, 
	563, 563, 1, 564, 564, 1, 565, 565, 
	1, 566, 566, 1, 567, 567, 1, 568, 
	568, 1, 569, 569, 1, 570, 570, 1, 
	571, 572, 571, 572, 1, 573, 573, 1, 
	574, 574, 1, 575, 575, 1, 576, 576, 
	1, 577, 578, 577, 578, 1, 579, 579, 
	1, 580, 580, 1, 581, 581, 1, 582, 
	582, 1, 583, 583, 1, 584, 584, 1, 
	585, 585, 1, 586, 586, 1, 587, 587, 
	1, 588, 588, 1, 589, 589, 1, 590, 
	590, 1, 591, 591, 1, 592, 592, 1, 
	593, 593, 1, 594, 594, 1, 595, 595, 
	1, 596, 596, 1, 597, 597, 1, 598, 
	598, 1, 599, 599, 1, 600, 600, 1, 
	601, 602, 603, 604, 601, 602, 603, 604, 
	1, 605, 606, 605, 606, 1, 607, 607, 
	1, 608, 608, 1, 609, 609, 1, 610, 
	610, 1, 611, 611, 1, 612, 612, 1, 
	613, 613, 1, 614, 614, 1, 615, 615, 
	1, 616, 616, 1, 617, 617, 1, 618, 
	619, 620, 621, 622, 623, 624, 618, 619, 
	620, 621, 622, 623, 624, 1, 625, 625, 
	1, 626, 626, 1, 627, 627, 1, 628, 
	628, 1, 629, 629, 1, 630, 630, 1, 
	631, 631, 1, 632, 632, 1, 633, 633, 
	1, 634, 634, 1, 635, 635, 1, 636, 
	636, 1, 637, 637, 1, 638, 638, 1, 
	639, 639, 1, 640, 640, 1, 641, 641, 
	1, 642, 642, 1, 643, 643, 1, 644, 
	644, 1, 645, 645, 1, 646, 646, 1, 
	647, 648, 649, 647, 648, 649, 1, 650, 
	650, 1, 651, 651, 1, 652, 652, 1, 
	653, 653, 1, 654, 654, 1, 655, 655, 
	1, 656, 656, 1, 657, 657, 1, 658, 
	658, 1, 659, 659, 1, 660, 660, 1, 
	661, 661, 1, 662, 662, 1, 663, 663, 
	1, 664, 664, 1, 665, 665, 1, 666, 
	666, 1, 667, 667, 1, 668, 668, 1, 
	669, 669, 1, 670, 670, 1, 671, 671, 
	1, 672, 672, 1, 673, 673, 1, 674, 
	674, 1, 675, 675, 1, 676, 676, 1, 
	677, 677, 1, 678, 678, 1, 679, 679, 
	1, 680, 680, 1, 681, 681, 1, 682, 
	682, 1, 683, 683, 1, 684, 684, 1, 
	685, 685, 1, 686, 686, 1, 687, 687, 
	1, 688, 689, 690, 688, 689, 690, 1, 
	691, 691, 1, 692, 692, 1, 693, 693, 
	1, 694, 694, 1, 695, 695, 1, 696, 
	696, 1, 697, 697, 1, 698, 698, 1, 
	699, 699, 1, 700, 700, 1, 701, 701, 
	1, 702, 702, 1, 703, 703, 1, 704, 
	704, 1, 705, 705, 1, 706, 706, 1, 
	707, 707, 1, 708, 708, 1, 709, 709, 
	1, 710, 710, 1, 711, 711, 1, 712, 
	712, 1, 713, 713, 1, 714, 714, 1, 
	715, 715, 1, 716, 716, 1, 717, 717, 
	1, 718, 718, 1, 719, 719, 1, 720, 
	721, 720, 721, 1, 722, 722, 1, 723, 
	723, 1, 724, 724, 1, 725, 725, 1, 
	726, 726, 1, 727, 727, 1, 728, 728, 
	1, 729, 729, 1, 730, 730, 1, 731, 
	731, 1, 732, 733, 732, 733, 1, 734, 
	735, 734, 735, 1, 736, 736, 1, 737, 
	737, 1, 738, 738, 1, 739, 739, 1, 
	740, 740, 1, 741, 741, 1, 742, 742, 
	1, 743, 743, 1, 744, 744, 1, 745, 
	745, 1, 746, 747, 746, 747, 1, 748, 
	748, 1, 749, 749, 1, 750, 750, 1, 
	751, 751, 1, 752, 752, 1, 753, 753, 
	1, 754, 754, 1, 755, 755, 1, 756, 
	757, 758, 759, 760, 761, 756, 757, 758, 
	759, 760, 761, 1, 762, 763, 762, 763, 
	1, 764, 764, 1, 765, 766, 767, 765, 
	766, 767, 1, 768, 769, 768, 769, 1, 
	770, 770, 1, 771, 771, 1, 772, 772, 
	1, 773, 773, 1, 774, 774, 1, 775, 
	775, 1, 776, 776, 1, 777, 777, 1, 
	778, 778, 1, 779, 779, 1, 780, 780, 
	1, 781, 781, 1, 782, 782, 1, 783, 
	783, 1, 784, 784, 1, 785, 785, 1, 
	786, 786, 1, 787, 787, 1, 788, 788, 
	1, 789, 789, 1, 790, 790, 1, 791, 
	791, 1, 792, 792, 1, 793, 793, 1, 
	794, 794, 1, 795, 795, 1, 796, 796, 
	1, 797, 797, 1, 798, 798, 1, 799, 
	799, 1, 800, 800, 1, 801, 801, 1, 
	802, 802, 1, 803, 804, 803, 804, 1, 
	805, 805, 1, 806, 806, 1, 807, 807, 
	1, 808, 808, 1, 809, 809, 1, 810, 
	810, 1, 811, 811, 1, 812, 812, 1, 
	813, 813, 1, 814, 814, 1, 815, 815, 
	1, 816, 816, 1, 817, 817, 1, 818, 
	818, 1, 819, 819, 1, 820, 820, 1, 
	821, 821, 1, 822, 822, 1, 823, 823, 
	1, 824, 824, 1, 825, 825, 1, 826, 
	826, 1, 827, 827, 1, 828, 829, 830, 
	828, 829, 830, 1, 831, 831, 1, 832, 
	832, 1, 833, 834, 834, 1, 833, 835, 
	833, 836, 1, 837, 1, 838, 839, 838, 
	840, 1, 841, 842, 841, 1, 842, 843, 
	842, 844, 1, 845, 1, 846, 847, 846, 
	848, 1, 849, 850, 849, 1, 850, 851, 
	850, 852, 1, 853, 1, 854, 855, 854, 
	856, 1, 857, 858, 857, 1, 859, 860, 
	861, 859, 862, 1, 863, 864, 863, 1, 
	865, 866, 867, 865, 868, 1, 869, 870, 
	869, 1, 871, 872, 873, 871, 874, 1, 
	875, 876, 875, 1, 877, 1, 877, 878, 
	877, 879, 1, 880, 1, 881, 882, 881, 
	883, 1, 884, 885, 884, 1, 885, 886, 
	885, 887, 1, 888, 1, 889, 890, 889, 
	891, 1, 892, 893, 892, 1, 893, 894, 
	893, 895, 1, 896, 1, 897, 898, 897, 
	899, 1, 900, 901, 900, 1, 902, 903, 
	904, 905, 905, 902, 904, 904, 1, 906, 
	907, 908, 909, 909, 906, 908, 1, 910, 
	910, 911, 1, 911, 1, 906, 907, 906, 
	911, 1, 912, 913, 914, 912, 915, 1, 
	916, 917, 916, 1, 918, 919, 920, 918, 
	921, 1, 922, 923, 922, 1, 924, 925, 
	926, 924, 927, 1, 928, 929, 928, 1, 
	930, 931, 930, 931, 1, 932, 932, 1, 
	933, 933, 1, 934, 934, 1, 935, 935, 
	1, 936, 936, 1, 937, 937, 1, 938, 
	938, 1, 939, 939, 1, 940, 940, 1, 
	941, 941, 1, 942, 942, 1, 943, 943, 
	1, 944, 945, 946, 947, 948, 949, 950, 
	951, 944, 945, 946, 947, 948, 949, 950, 
	951, 1, 952, 953, 954, 952, 953, 954, 
	1, 955, 955, 1, 956, 956, 1, 957, 
	957, 1, 958, 958, 1, 959, 959, 1, 
	960, 960, 1, 961, 961, 1, 962, 962, 
	1, 963, 963, 1, 964, 964, 1, 965, 
	965, 1, 966, 966, 1, 967, 967, 1, 
	968, 968, 1, 969, 969, 1, 970, 970, 
	1, 971, 971, 1, 972, 972, 1, 973, 
	973, 1, 974, 975, 974, 975, 1, 976, 
	976, 1, 977, 977, 1, 978, 978, 1, 
	979, 979, 1, 980, 980, 1, 981, 981, 
	1, 982, 982, 1, 983, 983, 1, 984, 
	984, 1, 985, 985, 1, 986, 986, 1, 
	987, 987, 1, 988, 988, 1, 989, 989, 
	1, 990, 990, 1, 991, 991, 1, 992, 
	992, 1, 993, 993, 1, 994, 994, 1, 
	995, 995, 1, 996, 997, 996, 997, 1, 
	998, 998, 1, 999, 999, 1, 1000, 1000, 
	1, 1001, 1001, 1, 1002, 1003, 1002, 1003, 
	1, 1004, 1004, 1, 1005, 1005, 1, 1006, 
	1006, 1, 1007, 1007, 1, 1008, 1008, 1, 
	1009, 1009, 1, 1010, 1010, 1, 1011, 1011, 
	1, 1012, 1012, 1, 1013, 1013, 1, 1014, 
	1014, 1, 1015, 1015, 1, 1016, 1016, 1, 
	1017, 1017, 1, 1018, 1018, 1, 1019, 1019, 
	1, 1020, 1020, 1, 1021, 1021, 1, 1022, 
	1022, 1, 1023, 1023, 1, 1024, 1025, 1026, 
	1027, 1028, 1024, 1025, 1026, 1027, 1028, 1, 
	1029, 1029, 1, 1030, 1030, 1, 1031, 1031, 
	1, 1032, 1032, 1, 1033, 1033, 1, 1034, 
	1034, 1, 1035, 1035, 1, 1036, 1036, 1, 
	1037, 1037, 1, 1038, 1038, 1, 1039, 1039, 
	1, 1040, 1040, 1, 1041, 1041, 1, 1042, 
	1042, 1, 1043, 1043, 1, 1044, 1044, 1, 
	1045, 1045, 1, 1046, 1046, 1, 1047, 1047, 
	1, 1048, 1048, 1, 1049, 1049, 1, 1050, 
	1050, 1, 1051, 1051, 1, 1052, 1052, 1, 
	1053, 1053, 1, 1054, 1054, 1, 1055, 1055, 
	1, 1056, 1056, 1, 1057, 1057, 1, 1058, 
	1058, 1, 1059, 1059, 1, 1060, 1060, 1, 
	1061, 1061, 1, 1062, 1062, 1, 1063, 1064, 
	1063, 1064, 1, 1065, 1065, 1, 1066, 1066, 
	1, 1067, 1067, 1, 1068, 1068, 1, 1069, 
	1069, 1, 1070, 1070, 1, 1071, 1071, 1, 
	1072, 1072, 1, 1073, 1073, 1, 1074, 1074, 
	1, 1075, 1075, 1, 1076, 1076, 1, 1077, 
	1077, 1, 1078, 1078, 1, 1079, 1079, 1, 
	1080, 1080, 1, 1081, 1081, 1, 1082, 1082, 
	1082, 1, 1083, 1083, 1083, 1, 1, 1, 
	1084, 1085, 1086, 1087, 1, 1, 1, 1, 
	1, 1088, 1089, 1090, 1091, 1, 1, 1, 
	1, 1, 1092, 1093, 1094, 1095, 1, 1, 
	1, 1, 1, 1, 1096, 1097, 1098, 1099, 
	1, 1, 1, 1, 1, 1, 1, 1100, 
	1101, 1102, 1103, 1104, 1104, 1, 1, 1, 
	1, 1, 1, 1105, 1106, 1107, 1108, 1, 
	1, 1, 1, 1, 1109, 1110, 1111, 1112, 
	1, 1, 1, 1, 1, 1113, 1114, 1115, 
	1116, 1, 1, 1, 1, 1, 1117, 1118, 
	1119, 1120, 1, 1, 1, 1, 1, 1121, 
	1122, 1123, 1124, 1, 1, 1, 1, 1, 
	1125, 1126, 1127, 1128, 1, 1, 1, 1, 
	1, 1, 1129, 1130, 1131, 1132, 1, 1, 
	1, 1, 1, 1133, 1134, 1135, 1136, 1, 
	1, 1, 1, 1, 1, 1, 1137, 1138, 
	1139, 1140, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1141, 1142, 1143, 1144, 
	1, 1, 1, 1, 1, 1145, 1146, 1147, 
	1148, 1, 1, 1, 1, 1, 1149, 1150, 
	1151, 1152, 1, 1, 1, 1, 1, 1, 
	1, 1153, 1154, 1155, 1156, 1, 1, 1, 
	1, 1, 1, 1157, 1158, 1159, 1160, 1, 
	1, 1, 1, 1, 1, 1, 1, 1161, 
	1162, 1163, 1164, 1, 1, 1, 1, 1, 
	1165, 1166, 1167, 1168, 1, 1, 1, 1, 
	1, 1, 1, 1169, 1170, 1171, 1172, 1, 
	1, 1, 1, 1, 1173, 1174, 1175, 1176, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1177, 1178, 1179, 1180, 1181, 1181, 1, 
	1, 1, 1, 1, 1182, 1183, 1184, 1185, 
	1, 1, 1, 1, 1, 1186, 1187, 1188, 
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1, 
	1, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 
	1203, 1204, 1205, 1, 1206, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 
	1215, 1216, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1217, 1218, 1219, 
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1227, 1228, 1229, 1230, 1231, 1232, 
	1233, 1234, 1235, 1236, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1237, 
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 
	1246, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1247, 1248, 1249, 1250, 
	1251, 1252, 1253, 1254, 1255, 1256, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 
	1264, 1265, 1266, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1267, 1268, 
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1277, 1278, 1279, 1280, 1281, 
	1282, 1283, 1284, 1285, 1286, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1287, 1288, 1289, 1290, 1291, 1291, 1, 1, 
	1, 1, 1, 1, 1292, 1293, 1294, 1295, 
	1296, 1297, 1298, 1299, 1300, 1301, 1, 1, 
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 
	1310, 1311, 1, 1312, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1313, 
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 
	1322, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1323, 1324, 1325, 1326, 
	1327, 1328, 1329, 1330, 1331, 1332, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 
	1340, 1341, 1342, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1343, 1344, 
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1353, 1354, 1355, 1356, 1357, 
	1358, 1359, 1360, 1361, 1362, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 
	1371, 1372, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1373, 1374, 1375, 
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1383, 1384, 1385, 1386, 1387, 1388, 
	1389, 1390, 1391, 1392, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1393, 
	1394, 1395, 1396, 1, 1, 1, 1, 1, 
	1397, 1398, 1399, 1400, 1, 1, 1, 1, 
	1, 1, 1401, 1402, 1403, 1404, 1, 1, 
	1, 1, 1, 1405, 1406, 1407, 1408, 1, 
	1, 1, 1, 1, 1409, 1410, 1411, 1412, 
	1, 1, 1, 1, 1, 1413, 1413, 1, 
	1414, 1415, 1416, 1417, 1, 1, 1, 1, 
	1, 1, 1418, 1419, 1420, 1421, 1, 1, 
	1, 1, 1, 1422, 1423, 1424, 1425, 1, 
	1, 1, 1, 1, 1, 1426, 1427, 1428, 
	1429, 1, 1, 1, 1, 1, 1430, 1431, 
	1432, 1433, 1434, 1434, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1435, 1436, 1437, 
	1438, 1, 1, 1, 1, 1, 1439, 1440, 
	1441, 1442, 1, 1, 1, 1, 1, 1, 
	1443, 1444, 1445, 1446, 1, 1, 1, 1, 
	1, 1, 1, 1, 1447, 1448, 1449, 1450, 
	1, 1, 1, 1, 1, 1451, 1452, 1453, 
	1454, 1, 1, 1, 1, 1, 1, 1, 
	1455, 1456, 1457, 1458, 1, 1, 1, 1, 
	1, 1459, 1460, 1461, 1462, 1, 1, 1, 
	1, 1, 1, 1, 1463, 1464, 1465, 1466, 
	1, 1, 1, 1, 1, 1467, 1468, 1469, 
	1470, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1471, 1472, 1473, 
	1474, 1, 1, 1, 1, 1, 1, 1475, 
	1476, 1477, 1478, 1, 1, 1, 1, 1, 
	1479, 1479, 1, 1, 1, 1480, 1481, 1482, 
	1483, 1, 1, 1, 1, 1, 1484, 1485, 
	1486, 1487, 1488, 1488, 1, 1, 1, 1, 
	1, 1489, 1490, 1491, 1492, 1, 1, 1, 
	1, 1, 1493, 1494, 1495, 1496, 1, 1, 
	1, 1, 1, 1, 1497, 1498, 1499, 1500, 
	1, 1, 1, 1, 1, 1501, 1502, 1503, 
	1504, 1, 1, 1, 1, 1, 1505, 1506, 
	1507, 1508, 1, 1, 1, 1, 1, 1, 
	1509, 1510, 1511, 1512, 1, 1, 1, 1, 
	1, 1, 1513, 1514, 1515, 1516, 1, 1, 
	1, 1, 1, 1517, 1518, 1519, 1520, 1, 
	1, 1, 1, 1, 1, 1521, 1522, 1523, 
	1524, 1, 1, 1, 1, 1, 1525, 1526, 
	1527, 1528, 1, 1, 1, 1, 1, 1, 
	1529, 1530, 1531, 1532, 1, 1, 1, 1, 
	1, 1533, 1534, 1535, 1536, 1, 1, 1, 
	1, 1, 1, 1537, 1538, 1539, 1540, 1, 
	1, 1, 1, 1, 1, 1541, 1542, 1543, 
	1544, 1, 1, 1, 1, 1, 1545, 1546, 
	1547, 1548, 1, 1, 1, 1, 1, 1549, 
	1550, 1551, 1552, 1, 1, 1, 1, 1, 
	1553, 1554, 1555, 1556, 1, 1, 1, 1, 
	1, 1557, 1558, 1559, 1560, 1, 1, 1, 
	1, 1, 1561, 1562, 1563, 1564, 1, 1, 
	1, 1, 1, 1, 1565, 1566, 1567, 1568, 
	1, 1, 1, 1, 1, 1569, 1570, 1571, 
	1572, 1, 1, 1, 1, 1, 1573, 1574, 
	1575, 1576, 1, 1, 1, 1, 1, 1577, 
	1578, 1579, 1580, 1, 1, 1, 1, 1, 
	1581, 1582, 1583, 1584, 1, 1, 1, 1, 
	1, 1585, 1586, 1587, 1588, 1, 1, 1, 
	1, 1, 1, 1589, 1590, 1591, 1592, 1, 
	1, 1, 1, 1, 1593, 1593, 1, 1594, 
	1595, 1596, 1597, 1, 1, 1, 1, 1, 
	1598, 1599, 1600, 1601, 1, 1, 1, 1, 
	1, 1602, 1602, 1, 1, 1603, 1604, 1605, 
	1606, 1607, 1607, 1, 1, 1, 1, 1, 
	1, 0
};

static const short _pixel_color_trans_targs[] = {
	2, 0, 8, 37, 74, 114, 225, 251, 
	282, 337, 348, 352, 459, 562, 575, 596, 
	658, 717, 785, 812, 819, 829, 3, 4, 
	838, 6, 839, 840, 9, 16, 26, 34, 
	10, 11, 12, 13, 14, 15, 841, 17, 
	18, 19, 20, 21, 22, 23, 24, 25, 
	842, 27, 28, 29, 30, 31, 32, 33, 
	847, 35, 36, 852, 38, 41, 45, 64, 
	67, 39, 40, 857, 42, 43, 44, 858, 
	46, 58, 47, 48, 863, 49, 50, 51, 
	52, 53, 54, 55, 56, 57, 864, 865, 
	60, 61, 62, 63, 870, 65, 66, 871, 
	68, 69, 70, 71, 72, 73, 876, 75, 
	82, 96, 112, 76, 77, 78, 79, 80, 
	81, 881, 83, 90, 84, 85, 86, 87, 
	88, 89, 886, 91, 92, 93, 94, 95, 
	891, 97, 98, 99, 896, 100, 109, 101, 
	102, 103, 104, 105, 106, 107, 108, 901, 
	110, 111, 902, 113, 907, 115, 199, 211, 
	217, 116, 117, 118, 121, 124, 136, 140, 
	146, 162, 164, 186, 194, 119, 120, 912, 
	122, 123, 913, 125, 132, 126, 127, 128, 
	129, 130, 131, 914, 133, 134, 919, 135, 
	921, 920, 137, 138, 139, 922, 141, 142, 
	143, 144, 145, 923, 147, 155, 148, 149, 
	150, 151, 152, 153, 154, 924, 156, 159, 
	157, 158, 929, 160, 161, 934, 163, 939, 
	165, 169, 175, 166, 167, 168, 940, 170, 
	171, 172, 173, 174, 941, 176, 177, 178, 
	179, 182, 180, 181, 946, 183, 184, 185, 
	947, 952, 187, 188, 189, 190, 191, 192, 
	193, 953, 195, 196, 197, 198, 954, 200, 
	201, 202, 205, 203, 204, 955, 206, 207, 
	208, 209, 210, 960, 212, 213, 214, 215, 
	216, 965, 966, 218, 219, 220, 221, 222, 
	223, 224, 967, 226, 233, 242, 227, 228, 
	229, 230, 231, 232, 972, 234, 235, 236, 
	237, 238, 239, 240, 241, 977, 243, 244, 
	245, 246, 247, 248, 249, 250, 978, 252, 
	259, 267, 273, 253, 254, 255, 256, 257, 
	258, 979, 260, 261, 262, 263, 264, 265, 
	266, 980, 268, 981, 270, 271, 272, 986, 
	274, 275, 991, 276, 1099, 1093, 278, 279, 
	280, 281, 1098, 283, 293, 284, 289, 285, 
	286, 287, 288, 1201, 290, 291, 292, 1206, 
	294, 295, 313, 296, 311, 297, 298, 299, 
	297, 298, 299, 300, 309, 301, 302, 303, 
	301, 302, 303, 304, 307, 305, 306, 1211, 
	305, 306, 1211, 306, 308, 1211, 307, 306, 
	1211, 302, 310, 303, 309, 302, 303, 298, 
	312, 299, 311, 298, 299, 314, 315, 335, 
	316, 317, 318, 316, 317, 318, 319, 333, 
	320, 321, 322, 320, 321, 322, 323, 331, 
	324, 325, 326, 324, 325, 326, 326, 1211, 
	327, 328, 306, 1211, 327, 328, 329, 330, 
	325, 332, 326, 331, 325, 326, 321, 334, 
	322, 333, 321, 322, 317, 336, 318, 335, 
	317, 318, 338, 345, 339, 340, 341, 342, 
	343, 344, 1212, 346, 347, 1217, 349, 350, 
	351, 1222, 353, 369, 379, 354, 363, 355, 
	356, 357, 358, 1227, 360, 361, 362, 1228, 
	364, 365, 366, 367, 368, 1233, 370, 371, 
	372, 373, 374, 375, 376, 377, 378, 1234, 
	380, 451, 457, 381, 382, 383, 386, 392, 
	409, 412, 446, 384, 385, 1239, 387, 390, 
	388, 389, 1244, 391, 1245, 393, 405, 394, 
	395, 396, 397, 398, 399, 1250, 401, 402, 
	403, 404, 1255, 406, 407, 1256, 408, 1258, 
	1257, 410, 411, 1259, 413, 417, 423, 428, 
	439, 414, 415, 416, 1264, 418, 419, 420, 
	421, 422, 1269, 424, 425, 426, 427, 1270, 
	429, 430, 431, 432, 435, 433, 434, 1275, 
	436, 437, 438, 1276, 1277, 440, 441, 442, 
	443, 444, 445, 1278, 447, 448, 449, 450, 
	1283, 452, 453, 454, 455, 456, 1288, 458, 
	1289, 460, 468, 534, 556, 461, 465, 462, 
	463, 464, 1290, 466, 467, 1295, 469, 470, 
	471, 472, 473, 482, 485, 490, 495, 518, 
	526, 474, 475, 476, 477, 478, 479, 480, 
	481, 1300, 483, 484, 1301, 486, 487, 488, 
	489, 1302, 491, 492, 493, 494, 1307, 496, 
	502, 509, 497, 498, 499, 500, 501, 1312, 
	503, 504, 505, 506, 507, 508, 1313, 510, 
	511, 512, 513, 514, 515, 516, 517, 1314, 
	519, 520, 521, 522, 523, 524, 525, 1315, 
	527, 528, 529, 530, 531, 532, 533, 1316, 
	535, 544, 550, 536, 537, 538, 539, 540, 
	541, 542, 543, 1317, 545, 546, 547, 548, 
	549, 1318, 551, 552, 553, 554, 555, 1319, 
	557, 558, 559, 560, 561, 1324, 563, 564, 
	565, 1330, 566, 567, 568, 569, 570, 571, 
	1325, 573, 574, 1331, 576, 587, 577, 581, 
	578, 579, 580, 1332, 582, 583, 584, 585, 
	586, 1333, 588, 593, 589, 590, 1338, 592, 
	1343, 594, 595, 1348, 597, 634, 642, 644, 
	646, 654, 598, 627, 599, 600, 611, 619, 
	601, 608, 602, 603, 604, 605, 606, 607, 
	1353, 609, 610, 1354, 612, 613, 614, 615, 
	616, 617, 618, 1359, 620, 621, 622, 623, 
	624, 625, 626, 1364, 628, 629, 630, 631, 
	632, 633, 1369, 635, 641, 636, 637, 638, 
	639, 640, 1370, 1375, 643, 1376, 645, 1381, 
	647, 648, 649, 650, 651, 652, 653, 1386, 
	655, 656, 657, 1387, 659, 660, 704, 1392, 
	661, 662, 680, 663, 678, 664, 665, 666, 
	664, 665, 666, 667, 676, 668, 669, 670, 
	668, 669, 670, 671, 674, 672, 673, 1397, 
	672, 673, 1397, 673, 675, 1397, 674, 673, 
	1397, 669, 677, 670, 676, 669, 670, 665, 
	679, 666, 678, 665, 666, 681, 682, 702, 
	683, 684, 685, 683, 684, 685, 686, 700, 
	687, 688, 689, 687, 688, 689, 690, 698, 
	691, 692, 693, 691, 692, 693, 693, 1397, 
	694, 695, 673, 1397, 694, 695, 696, 697, 
	692, 699, 693, 698, 692, 693, 688, 701, 
	689, 700, 688, 689, 684, 703, 685, 702, 
	684, 685, 705, 711, 706, 707, 708, 709, 
	710, 1398, 712, 713, 714, 715, 716, 1403, 
	718, 737, 747, 751, 756, 767, 769, 778, 
	719, 727, 730, 720, 721, 722, 723, 724, 
	725, 726, 1408, 728, 729, 1409, 731, 732, 
	733, 734, 735, 736, 1414, 738, 739, 743, 
	740, 741, 742, 1415, 744, 745, 746, 1420, 
	748, 749, 750, 1425, 752, 753, 754, 755, 
	1430, 757, 758, 759, 760, 763, 761, 762, 
	1435, 764, 765, 766, 1440, 1445, 768, 1446, 
	770, 771, 772, 773, 774, 775, 776, 777, 
	1451, 779, 780, 781, 782, 783, 784, 1456, 
	786, 787, 792, 796, 805, 1461, 788, 789, 
	790, 791, 1466, 793, 794, 795, 1471, 797, 
	798, 799, 800, 801, 802, 803, 804, 1476, 
	806, 807, 808, 809, 810, 811, 1477, 813, 
	814, 815, 816, 1482, 818, 1483, 820, 821, 
	823, 822, 1488, 824, 1493, 826, 827, 828, 
	1494, 830, 831, 832, 833, 1495, 835, 836, 
	837, 1500, 5, 7, 843, 844, 845, 846, 
	848, 849, 850, 851, 853, 854, 855, 856, 
	859, 860, 861, 862, 866, 867, 868, 869, 
	59, 872, 873, 874, 875, 877, 878, 879, 
	880, 882, 883, 884, 885, 887, 888, 889, 
	890, 892, 893, 894, 895, 897, 898, 899, 
	900, 903, 904, 905, 906, 908, 909, 910, 
	911, 915, 916, 917, 918, 925, 926, 927, 
	928, 930, 931, 932, 933, 935, 936, 937, 
	938, 942, 943, 944, 945, 948, 949, 950, 
	951, 956, 957, 958, 959, 961, 962, 963, 
	964, 968, 969, 970, 971, 973, 974, 975, 
	976, 982, 983, 984, 985, 269, 987, 988, 
	989, 990, 992, 993, 1005, 1016, 1027, 1038, 
	1049, 1060, 1071, 1082, 994, 996, 997, 998, 
	999, 1000, 1001, 1002, 1003, 1004, 995, 1006, 
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 
	1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 
	1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 
	1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 
	1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 
	1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 
	1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 
	1095, 1096, 1097, 277, 1100, 1101, 1113, 1124, 
	1135, 1146, 1157, 1168, 1179, 1190, 1102, 1104, 
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 
	1103, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 
	1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 
	1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 
	1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 
	1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 
	1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 
	1200, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 
	1210, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 
	1221, 1223, 1224, 1225, 1226, 359, 1229, 1230, 
	1231, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 
	1242, 1243, 1246, 1247, 1248, 1249, 1251, 1252, 
	1253, 1254, 400, 1260, 1261, 1262, 1263, 1265, 
	1266, 1267, 1268, 1271, 1272, 1273, 1274, 1279, 
	1280, 1281, 1282, 1284, 1285, 1286, 1287, 1291, 
	1292, 1293, 1294, 1296, 1297, 1298, 1299, 1303, 
	1304, 1305, 1306, 1308, 1309, 1310, 1311, 1320, 
	1321, 1322, 1323, 1326, 1327, 1328, 1329, 572, 
	1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 
	591, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 
	1352, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 
	1363, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 
	1374, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 
	1385, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 
	1396, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 
	1407, 1410, 1411, 1412, 1413, 1416, 1417, 1418, 
	1419, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 
	1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 
	1439, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 
	1450, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 
	1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 
	1470, 1472, 1473, 1474, 1475, 1478, 1479, 1480, 
	1481, 817, 1484, 1485, 1486, 1487, 1489, 1490, 
	1491, 1492, 825, 1496, 1497, 1498, 1499, 834
};

static const short _pixel_color_trans_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 19, 0, 19, 15, 21, 
	21, 19, 0, 19, 15, 21, 21, 19, 
	0, 19, 15, 21, 21, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 1339, 1339, 
	11, 11, 13, 13, 0, 0, 0, 0, 
	19, 0, 19, 15, 21, 21, 19, 0, 
	19, 15, 21, 21, 19, 0, 19, 15, 
	21, 21, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 0, 1342, 1342, 17, 17, 
	15, 0, 0, 19, 0, 19, 15, 21, 
	21, 19, 0, 19, 15, 21, 21, 19, 
	0, 19, 15, 21, 21, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 0, 1342, 
	1342, 17, 17, 15, 0, 0, 1339, 1339, 
	11, 11, 13, 13, 0, 0, 0, 0, 
	19, 0, 19, 15, 21, 21, 19, 0, 
	19, 15, 21, 21, 19, 0, 19, 15, 
	21, 21, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
};

static const short _pixel_color_eof_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 5, 1, 
	3, 29, 39, 31, 33, 35, 37, 49, 
	41, 43, 45, 47, 59, 51, 53, 55, 
	57, 61, 71, 63, 65, 67, 69, 25, 
	73, 83, 75, 77, 79, 81, 85, 95, 
	87, 89, 91, 93, 105, 97, 99, 101, 
	103, 115, 107, 109, 111, 113, 125, 117, 
	119, 121, 123, 135, 127, 129, 131, 133, 
	145, 137, 139, 141, 143, 147, 157, 149, 
	151, 153, 155, 167, 159, 161, 163, 165, 
	169, 171, 181, 173, 175, 177, 179, 183, 
	185, 187, 189, 191, 201, 193, 195, 197, 
	199, 211, 203, 205, 207, 209, 221, 213, 
	215, 217, 219, 223, 225, 235, 227, 229, 
	231, 233, 237, 247, 239, 241, 243, 245, 
	249, 251, 253, 263, 255, 257, 259, 261, 
	273, 265, 267, 269, 271, 275, 277, 287, 
	279, 281, 283, 285, 297, 289, 291, 293, 
	295, 299, 301, 303, 305, 325, 307, 309, 
	311, 313, 323, 315, 317, 319, 321, 529, 
	327, 351, 331, 329, 333, 335, 337, 339, 
	341, 343, 345, 347, 349, 373, 353, 355, 
	357, 359, 361, 363, 365, 367, 369, 371, 
	395, 375, 377, 379, 381, 383, 385, 387, 
	389, 391, 393, 417, 397, 399, 401, 403, 
	405, 407, 409, 411, 413, 415, 439, 419, 
	421, 423, 425, 427, 429, 431, 433, 435, 
	437, 461, 441, 443, 445, 447, 449, 451, 
	453, 455, 457, 459, 483, 463, 465, 467, 
	469, 471, 473, 475, 477, 479, 481, 505, 
	485, 487, 489, 491, 493, 495, 497, 499, 
	501, 503, 527, 507, 509, 511, 513, 515, 
	517, 519, 521, 523, 525, 539, 531, 533, 
	535, 537, 541, 745, 543, 567, 547, 545, 
	549, 551, 553, 555, 557, 559, 561, 563, 
	565, 589, 569, 571, 573, 575, 577, 579, 
	581, 583, 585, 587, 611, 591, 593, 595, 
	597, 599, 601, 603, 605, 607, 609, 633, 
	613, 615, 617, 619, 621, 623, 625, 627, 
	629, 631, 655, 635, 637, 639, 641, 643, 
	645, 647, 649, 651, 653, 677, 657, 659, 
	661, 663, 665, 667, 669, 671, 673, 675, 
	699, 679, 681, 683, 685, 687, 689, 691, 
	693, 695, 697, 721, 701, 703, 705, 707, 
	709, 711, 713, 715, 717, 719, 743, 723, 
	725, 727, 729, 731, 733, 735, 737, 739, 
	741, 755, 747, 749, 751, 753, 765, 757, 
	759, 761, 763, 9, 775, 767, 769, 771, 
	773, 785, 777, 779, 781, 783, 795, 787, 
	789, 791, 793, 807, 805, 797, 799, 801, 
	803, 809, 819, 811, 813, 815, 817, 829, 
	821, 823, 825, 827, 831, 841, 833, 835, 
	837, 839, 851, 843, 845, 847, 849, 853, 
	855, 857, 859, 869, 861, 863, 865, 867, 
	879, 871, 873, 875, 877, 881, 891, 883, 
	885, 887, 889, 893, 895, 897, 907, 899, 
	901, 903, 905, 917, 909, 911, 913, 915, 
	919, 921, 931, 923, 925, 927, 929, 941, 
	933, 935, 937, 939, 943, 945, 955, 947, 
	949, 951, 953, 965, 957, 959, 961, 963, 
	967, 969, 971, 973, 975, 977, 979, 989, 
	981, 983, 985, 987, 991, 1001, 993, 995, 
	997, 999, 1005, 1003, 1007, 1017, 1009, 1011, 
	1013, 1015, 1027, 1019, 1021, 1023, 1025, 1037, 
	1029, 1031, 1033, 1035, 1047, 1039, 1041, 1043, 
	1045, 1049, 1059, 1051, 1053, 1055, 1057, 1069, 
	1061, 1063, 1065, 1067, 1079, 1071, 1073, 1075, 
	1077, 1081, 1091, 1083, 1085, 1087, 1089, 1093, 
	1103, 1095, 1097, 1099, 1101, 1113, 1105, 1107, 
	1109, 1111, 1115, 1125, 1117, 1119, 1121, 1123, 
	1135, 1127, 1129, 1131, 1133, 7, 1145, 1137, 
	1139, 1141, 1143, 1155, 1147, 1149, 1151, 1153, 
	1157, 1167, 1159, 1161, 1163, 1165, 1169, 1179, 
	1171, 1173, 1175, 1177, 1189, 1181, 1183, 1185, 
	1187, 1199, 1191, 1193, 1195, 1197, 1209, 1201, 
	1203, 1205, 1207, 1219, 1211, 1213, 1215, 1217, 
	1229, 1221, 1223, 1225, 1227, 1231, 1241, 1233, 
	1235, 1237, 1239, 1251, 1243, 1245, 1247, 1249, 
	1261, 1253, 1255, 1257, 1259, 1271, 1263, 1265, 
	1267, 1269, 1281, 1273, 1275, 1277, 1279, 1291, 
	1283, 1285, 1287, 1289, 27, 1301, 1293, 1295, 
	1297, 1299, 1303, 1313, 1305, 1307, 1309, 1311, 
	1323, 1315, 1317, 1319, 1321, 23, 1325, 1337, 
	1327, 1329, 1331, 1333, 1335
};

static const int pixel_color_start = 1;
static const int pixel_color_first_final = 838;
static const int pixel_color_error = 0;

static const int pixel_color_en_main = 1;


#line 12 "pixel_parse.rl"


// Assumes valid input and case insensitive.
int UnHex(char ch) {
  if (ch <= '9') {
    return ch - '0';
  } else if (ch <= 'F') {
    return ch - 'A' + 10;
  } else {
    return ch - 'a' + 10;
  }
}

// Expands 0..100 -> 0..255.
inline int Percent(int val) {
  return (int)((float)val / 100.0 * 255.0);
}

Pixel Pixel::Parse(const std::string& name) {
  CHECK(name.size() > 0);
  int cs;
  const char* f = &name.front();
  const char* p = f;
  const char* pe = p + name.size();
  const char* eof = pe;
  const char* mark;
  const char* e;
  int val;
  float fval = 1.0;
  std::vector<int> vals;
  
#line 2455 "pixel_parse.cc"
	{
	cs = pixel_color_start;
	}

#line 2460 "pixel_parse.cc"
	{
	int _klen;
	unsigned int _trans;
	const short *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _pixel_color_trans_keys + _pixel_color_key_offsets[cs];
	_trans = _pixel_color_index_offsets[cs];

	_klen = _pixel_color_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _pixel_color_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _pixel_color_indicies[_trans];
	cs = _pixel_color_trans_targs[_trans];

	if ( _pixel_color_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _pixel_color_actions + _pixel_color_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 5:
#line 84 "pixel_parse.rl"
	{ mark = p; }
	break;
	case 6:
#line 84 "pixel_parse.rl"
	{ e = p; fval = strtod(mark, (char **)&e); }
	break;
	case 7:
#line 85 "pixel_parse.rl"
	{ val = 0; }
	break;
	case 8:
#line 85 "pixel_parse.rl"
	{ val = val * 10 + (*p - '0'); }
	break;
	case 9:
#line 87 "pixel_parse.rl"
	{ vals.push_back(0); }
	break;
	case 10:
#line 88 "pixel_parse.rl"
	{ vals.push_back(val); }
	break;
	case 11:
#line 89 "pixel_parse.rl"
	{ CHECK(val <= 100); vals.push_back(Percent(val)); }
	break;
#line 2562 "pixel_parse.cc"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const short *__acts = _pixel_color_actions + _pixel_color_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 0:
#line 45 "pixel_parse.rl"
	{
      return Pixel(Color256(UnHex(p[-6]) * 16 + UnHex(p[-5])),
                   Color256(UnHex(p[-4]) * 16 + UnHex(p[-3])),
                   Color256(UnHex(p[-2]) * 16 + UnHex(p[-1])),
                   1.0);
    }
	break;
	case 1:
#line 52 "pixel_parse.rl"
	{
      return Pixel(Color256(UnHex(p[-8]) * 16 + UnHex(p[-7])),
                   Color256(UnHex(p[-6]) * 16 + UnHex(p[-5])),
                   Color256(UnHex(p[-4]) * 16 + UnHex(p[-3])),
                   Color256(UnHex(p[-2]) * 16 + UnHex(p[-1])));
    }
	break;
	case 2:
#line 59 "pixel_parse.rl"
	{
      return Pixel(Color256(UnHex(p[-3]) * 16 + UnHex(p[-3])),
                   Color256(UnHex(p[-2]) * 16 + UnHex(p[-2])),
                   Color256(UnHex(p[-1]) * 16 + UnHex(p[-1])),
                   1.0);
    }
	break;
	case 3:
#line 66 "pixel_parse.rl"
	{
      DCHECK(vals.size() == 3);
      return Pixel(Color256(vals[0]),
                   Color256(vals[1]),
                   Color256(vals[2]),
                   fval);
    }
	break;
	case 4:
#line 74 "pixel_parse.rl"
	{
      DCHECK(vals.size() == 3);
      return Pixel::HSL(Color256(vals[0]),
                        Color256(vals[1]),
                        Color256(vals[2]),
                        fval);
    }
	break;
	case 12:
#line 103 "pixel_parse.rl"
	{ return Pixel::kWhite;         }
	break;
	case 13:
#line 104 "pixel_parse.rl"
	{ return Pixel::kBlack;         }
	break;
	case 14:
#line 105 "pixel_parse.rl"
	{ return Pixel::kClear;         }
	break;
	case 15:
#line 106 "pixel_parse.rl"
	{ return RGB256(240, 248, 255); }
	break;
	case 16:
#line 107 "pixel_parse.rl"
	{ return RGB256(255, 239, 219); }
	break;
	case 17:
#line 108 "pixel_parse.rl"
	{ return RGB256(238, 223, 204); }
	break;
	case 18:
#line 109 "pixel_parse.rl"
	{ return RGB256(205, 192, 176); }
	break;
	case 19:
#line 110 "pixel_parse.rl"
	{ return RGB256(139, 131, 120); }
	break;
	case 20:
#line 111 "pixel_parse.rl"
	{ return RGB256(250, 235, 215); }
	break;
	case 21:
#line 112 "pixel_parse.rl"
	{ return RGB256(127, 255, 212); }
	break;
	case 22:
#line 113 "pixel_parse.rl"
	{ return RGB256(118, 238, 198); }
	break;
	case 23:
#line 114 "pixel_parse.rl"
	{ return RGB256(102, 205, 170); }
	break;
	case 24:
#line 115 "pixel_parse.rl"
	{ return RGB256( 69, 139, 116); }
	break;
	case 25:
#line 116 "pixel_parse.rl"
	{ return RGB256(127, 255, 212); }
	break;
	case 26:
#line 117 "pixel_parse.rl"
	{ return RGB256(240, 255, 255); }
	break;
	case 27:
#line 118 "pixel_parse.rl"
	{ return RGB256(224, 238, 238); }
	break;
	case 28:
#line 119 "pixel_parse.rl"
	{ return RGB256(193, 205, 205); }
	break;
	case 29:
#line 120 "pixel_parse.rl"
	{ return RGB256(131, 139, 139); }
	break;
	case 30:
#line 121 "pixel_parse.rl"
	{ return RGB256(240, 255, 255); }
	break;
	case 31:
#line 122 "pixel_parse.rl"
	{ return RGB256(245, 245, 220); }
	break;
	case 32:
#line 123 "pixel_parse.rl"
	{ return RGB256(255, 228, 196); }
	break;
	case 33:
#line 124 "pixel_parse.rl"
	{ return RGB256(238, 213, 183); }
	break;
	case 34:
#line 125 "pixel_parse.rl"
	{ return RGB256(205, 183, 158); }
	break;
	case 35:
#line 126 "pixel_parse.rl"
	{ return RGB256(139, 125, 107); }
	break;
	case 36:
#line 127 "pixel_parse.rl"
	{ return RGB256(255, 228, 196); }
	break;
	case 37:
#line 128 "pixel_parse.rl"
	{ return RGB256(255, 235, 205); }
	break;
	case 38:
#line 129 "pixel_parse.rl"
	{ return RGB256(  0,   0, 255); }
	break;
	case 39:
#line 130 "pixel_parse.rl"
	{ return RGB256(  0,   0, 238); }
	break;
	case 40:
#line 131 "pixel_parse.rl"
	{ return RGB256(  0,   0, 205); }
	break;
	case 41:
#line 132 "pixel_parse.rl"
	{ return RGB256(  0,   0, 139); }
	break;
	case 42:
#line 133 "pixel_parse.rl"
	{ return RGB256(  0,   0, 255); }
	break;
	case 43:
#line 134 "pixel_parse.rl"
	{ return RGB256(138,  43, 226); }
	break;
	case 44:
#line 135 "pixel_parse.rl"
	{ return RGB256(255,  64,  64); }
	break;
	case 45:
#line 136 "pixel_parse.rl"
	{ return RGB256(238,  59,  59); }
	break;
	case 46:
#line 137 "pixel_parse.rl"
	{ return RGB256(205,  51,  51); }
	break;
	case 47:
#line 138 "pixel_parse.rl"
	{ return RGB256(139,  35,  35); }
	break;
	case 48:
#line 139 "pixel_parse.rl"
	{ return RGB256(165,  42,  42); }
	break;
	case 49:
#line 140 "pixel_parse.rl"
	{ return RGB256(255, 211, 155); }
	break;
	case 50:
#line 141 "pixel_parse.rl"
	{ return RGB256(238, 197, 145); }
	break;
	case 51:
#line 142 "pixel_parse.rl"
	{ return RGB256(205, 170, 125); }
	break;
	case 52:
#line 143 "pixel_parse.rl"
	{ return RGB256(139, 115,  85); }
	break;
	case 53:
#line 144 "pixel_parse.rl"
	{ return RGB256(222, 184, 135); }
	break;
	case 54:
#line 145 "pixel_parse.rl"
	{ return RGB256(152, 245, 255); }
	break;
	case 55:
#line 146 "pixel_parse.rl"
	{ return RGB256(142, 229, 238); }
	break;
	case 56:
#line 147 "pixel_parse.rl"
	{ return RGB256(122, 197, 205); }
	break;
	case 57:
#line 148 "pixel_parse.rl"
	{ return RGB256( 83, 134, 139); }
	break;
	case 58:
#line 149 "pixel_parse.rl"
	{ return RGB256( 95, 158, 160); }
	break;
	case 59:
#line 150 "pixel_parse.rl"
	{ return RGB256(127, 255,   0); }
	break;
	case 60:
#line 151 "pixel_parse.rl"
	{ return RGB256(118, 238,   0); }
	break;
	case 61:
#line 152 "pixel_parse.rl"
	{ return RGB256(102, 205,   0); }
	break;
	case 62:
#line 153 "pixel_parse.rl"
	{ return RGB256( 69, 139,   0); }
	break;
	case 63:
#line 154 "pixel_parse.rl"
	{ return RGB256(127, 255,   0); }
	break;
	case 64:
#line 155 "pixel_parse.rl"
	{ return RGB256(255, 127,  36); }
	break;
	case 65:
#line 156 "pixel_parse.rl"
	{ return RGB256(238, 118,  33); }
	break;
	case 66:
#line 157 "pixel_parse.rl"
	{ return RGB256(205, 102,  29); }
	break;
	case 67:
#line 158 "pixel_parse.rl"
	{ return RGB256(139,  69,  19); }
	break;
	case 68:
#line 159 "pixel_parse.rl"
	{ return RGB256(210, 105,  30); }
	break;
	case 69:
#line 160 "pixel_parse.rl"
	{ return RGB256(255, 114,  86); }
	break;
	case 70:
#line 161 "pixel_parse.rl"
	{ return RGB256(238, 106,  80); }
	break;
	case 71:
#line 162 "pixel_parse.rl"
	{ return RGB256(205,  91,  69); }
	break;
	case 72:
#line 163 "pixel_parse.rl"
	{ return RGB256(139,  62,  47); }
	break;
	case 73:
#line 164 "pixel_parse.rl"
	{ return RGB256(255, 127,  80); }
	break;
	case 74:
#line 165 "pixel_parse.rl"
	{ return RGB256(100, 149, 237); }
	break;
	case 75:
#line 166 "pixel_parse.rl"
	{ return RGB256(255, 248, 220); }
	break;
	case 76:
#line 167 "pixel_parse.rl"
	{ return RGB256(238, 232, 205); }
	break;
	case 77:
#line 168 "pixel_parse.rl"
	{ return RGB256(205, 200, 177); }
	break;
	case 78:
#line 169 "pixel_parse.rl"
	{ return RGB256(139, 136, 120); }
	break;
	case 79:
#line 170 "pixel_parse.rl"
	{ return RGB256(255, 248, 220); }
	break;
	case 80:
#line 171 "pixel_parse.rl"
	{ return RGB256(  0, 255, 255); }
	break;
	case 81:
#line 172 "pixel_parse.rl"
	{ return RGB256(  0, 238, 238); }
	break;
	case 82:
#line 173 "pixel_parse.rl"
	{ return RGB256(  0, 205, 205); }
	break;
	case 83:
#line 174 "pixel_parse.rl"
	{ return RGB256(  0, 139, 139); }
	break;
	case 84:
#line 175 "pixel_parse.rl"
	{ return RGB256(  0, 255, 255); }
	break;
	case 85:
#line 176 "pixel_parse.rl"
	{ return RGB256(0,     0, 139); }
	break;
	case 86:
#line 177 "pixel_parse.rl"
	{ return RGB256(0,   139, 139); }
	break;
	case 87:
#line 178 "pixel_parse.rl"
	{ return RGB256(255, 185,  15); }
	break;
	case 88:
#line 179 "pixel_parse.rl"
	{ return RGB256(238, 173,  14); }
	break;
	case 89:
#line 180 "pixel_parse.rl"
	{ return RGB256(205, 149,  12); }
	break;
	case 90:
#line 181 "pixel_parse.rl"
	{ return RGB256(139, 101,   8); }
	break;
	case 91:
#line 182 "pixel_parse.rl"
	{ return RGB256(184, 134,  11); }
	break;
	case 92:
#line 183 "pixel_parse.rl"
	{ return RGB256(169, 169, 169); }
	break;
	case 93:
#line 184 "pixel_parse.rl"
	{ return RGB256(  0, 100,   0); }
	break;
	case 94:
#line 185 "pixel_parse.rl"
	{ return RGB256(169, 169, 169); }
	break;
	case 95:
#line 186 "pixel_parse.rl"
	{ return RGB256(189, 183, 107); }
	break;
	case 96:
#line 187 "pixel_parse.rl"
	{ return RGB256(139,   0, 139); }
	break;
	case 97:
#line 188 "pixel_parse.rl"
	{ return RGB256(202, 255, 112); }
	break;
	case 98:
#line 189 "pixel_parse.rl"
	{ return RGB256(188, 238, 104); }
	break;
	case 99:
#line 190 "pixel_parse.rl"
	{ return RGB256(162, 205,  90); }
	break;
	case 100:
#line 191 "pixel_parse.rl"
	{ return RGB256(110, 139,  61); }
	break;
	case 101:
#line 192 "pixel_parse.rl"
	{ return RGB256( 85, 107,  47); }
	break;
	case 102:
#line 193 "pixel_parse.rl"
	{ return RGB256(255, 127,   0); }
	break;
	case 103:
#line 194 "pixel_parse.rl"
	{ return RGB256(238, 118,   0); }
	break;
	case 104:
#line 195 "pixel_parse.rl"
	{ return RGB256(205, 102,   0); }
	break;
	case 105:
#line 196 "pixel_parse.rl"
	{ return RGB256(139,  69,   0); }
	break;
	case 106:
#line 197 "pixel_parse.rl"
	{ return RGB256(255, 140,   0); }
	break;
	case 107:
#line 198 "pixel_parse.rl"
	{ return RGB256(191,  62, 255); }
	break;
	case 108:
#line 199 "pixel_parse.rl"
	{ return RGB256(178,  58, 238); }
	break;
	case 109:
#line 200 "pixel_parse.rl"
	{ return RGB256(154,  50, 205); }
	break;
	case 110:
#line 201 "pixel_parse.rl"
	{ return RGB256(104,  34, 139); }
	break;
	case 111:
#line 202 "pixel_parse.rl"
	{ return RGB256(153,  50, 204); }
	break;
	case 112:
#line 203 "pixel_parse.rl"
	{ return RGB256(139,   0,   0); }
	break;
	case 113:
#line 204 "pixel_parse.rl"
	{ return RGB256(233, 150, 122); }
	break;
	case 114:
#line 205 "pixel_parse.rl"
	{ return RGB256(193, 255, 193); }
	break;
	case 115:
#line 206 "pixel_parse.rl"
	{ return RGB256(180, 238, 180); }
	break;
	case 116:
#line 207 "pixel_parse.rl"
	{ return RGB256(155, 205, 155); }
	break;
	case 117:
#line 208 "pixel_parse.rl"
	{ return RGB256(105, 139, 105); }
	break;
	case 118:
#line 209 "pixel_parse.rl"
	{ return RGB256(143, 188, 143); }
	break;
	case 119:
#line 210 "pixel_parse.rl"
	{ return RGB256( 72,  61, 139); }
	break;
	case 120:
#line 211 "pixel_parse.rl"
	{ return RGB256(151, 255, 255); }
	break;
	case 121:
#line 212 "pixel_parse.rl"
	{ return RGB256(141, 238, 238); }
	break;
	case 122:
#line 213 "pixel_parse.rl"
	{ return RGB256(121, 205, 205); }
	break;
	case 123:
#line 214 "pixel_parse.rl"
	{ return RGB256( 82, 139, 139); }
	break;
	case 124:
#line 215 "pixel_parse.rl"
	{ return RGB256( 47,  79,  79); }
	break;
	case 125:
#line 216 "pixel_parse.rl"
	{ return RGB256( 47,  79,  79); }
	break;
	case 126:
#line 217 "pixel_parse.rl"
	{ return RGB256(  0, 206, 209); }
	break;
	case 127:
#line 218 "pixel_parse.rl"
	{ return RGB256(148,   0, 211); }
	break;
	case 128:
#line 219 "pixel_parse.rl"
	{ return RGB256(255,  20, 147); }
	break;
	case 129:
#line 220 "pixel_parse.rl"
	{ return RGB256(238,  18, 137); }
	break;
	case 130:
#line 221 "pixel_parse.rl"
	{ return RGB256(205,  16, 118); }
	break;
	case 131:
#line 222 "pixel_parse.rl"
	{ return RGB256(139,  10,  80); }
	break;
	case 132:
#line 223 "pixel_parse.rl"
	{ return RGB256(255,  20, 147); }
	break;
	case 133:
#line 224 "pixel_parse.rl"
	{ return RGB256(  0, 191, 255); }
	break;
	case 134:
#line 225 "pixel_parse.rl"
	{ return RGB256(  0, 178, 238); }
	break;
	case 135:
#line 226 "pixel_parse.rl"
	{ return RGB256(  0, 154, 205); }
	break;
	case 136:
#line 227 "pixel_parse.rl"
	{ return RGB256(  0, 104, 139); }
	break;
	case 137:
#line 228 "pixel_parse.rl"
	{ return RGB256(  0, 191, 255); }
	break;
	case 138:
#line 229 "pixel_parse.rl"
	{ return RGB256(105, 105, 105); }
	break;
	case 139:
#line 230 "pixel_parse.rl"
	{ return RGB256(105, 105, 105); }
	break;
	case 140:
#line 231 "pixel_parse.rl"
	{ return RGB256( 30, 144, 255); }
	break;
	case 141:
#line 232 "pixel_parse.rl"
	{ return RGB256( 28, 134, 238); }
	break;
	case 142:
#line 233 "pixel_parse.rl"
	{ return RGB256( 24, 116, 205); }
	break;
	case 143:
#line 234 "pixel_parse.rl"
	{ return RGB256( 16,  78, 139); }
	break;
	case 144:
#line 235 "pixel_parse.rl"
	{ return RGB256( 30, 144, 255); }
	break;
	case 145:
#line 236 "pixel_parse.rl"
	{ return RGB256(255,  48,  48); }
	break;
	case 146:
#line 237 "pixel_parse.rl"
	{ return RGB256(238,  44,  44); }
	break;
	case 147:
#line 238 "pixel_parse.rl"
	{ return RGB256(205,  38,  38); }
	break;
	case 148:
#line 239 "pixel_parse.rl"
	{ return RGB256(139,  26,  26); }
	break;
	case 149:
#line 240 "pixel_parse.rl"
	{ return RGB256(178,  34,  34); }
	break;
	case 150:
#line 241 "pixel_parse.rl"
	{ return RGB256(255, 250, 240); }
	break;
	case 151:
#line 242 "pixel_parse.rl"
	{ return RGB256( 34, 139,  34); }
	break;
	case 152:
#line 243 "pixel_parse.rl"
	{ return RGB256(220, 220, 220); }
	break;
	case 153:
#line 244 "pixel_parse.rl"
	{ return RGB256(248, 248, 255); }
	break;
	case 154:
#line 245 "pixel_parse.rl"
	{ return RGB256(255, 215,   0); }
	break;
	case 155:
#line 246 "pixel_parse.rl"
	{ return RGB256(238, 201,   0); }
	break;
	case 156:
#line 247 "pixel_parse.rl"
	{ return RGB256(205, 173,   0); }
	break;
	case 157:
#line 248 "pixel_parse.rl"
	{ return RGB256(139, 117,   0); }
	break;
	case 158:
#line 249 "pixel_parse.rl"
	{ return RGB256(255, 193,  37); }
	break;
	case 159:
#line 250 "pixel_parse.rl"
	{ return RGB256(238, 180,  34); }
	break;
	case 160:
#line 251 "pixel_parse.rl"
	{ return RGB256(205, 155,  29); }
	break;
	case 161:
#line 252 "pixel_parse.rl"
	{ return RGB256(139, 105,  20); }
	break;
	case 162:
#line 253 "pixel_parse.rl"
	{ return RGB256(218, 165,  32); }
	break;
	case 163:
#line 254 "pixel_parse.rl"
	{ return RGB256(255, 215,   0); }
	break;
	case 164:
#line 255 "pixel_parse.rl"
	{ return RGB256(  0,   0,   0); }
	break;
	case 165:
#line 256 "pixel_parse.rl"
	{ return RGB256(255, 255, 255); }
	break;
	case 166:
#line 257 "pixel_parse.rl"
	{ return RGB256( 26,  26,  26); }
	break;
	case 167:
#line 258 "pixel_parse.rl"
	{ return RGB256( 28,  28,  28); }
	break;
	case 168:
#line 259 "pixel_parse.rl"
	{ return RGB256( 31,  31,  31); }
	break;
	case 169:
#line 260 "pixel_parse.rl"
	{ return RGB256( 33,  33,  33); }
	break;
	case 170:
#line 261 "pixel_parse.rl"
	{ return RGB256( 36,  36,  36); }
	break;
	case 171:
#line 262 "pixel_parse.rl"
	{ return RGB256( 38,  38,  38); }
	break;
	case 172:
#line 263 "pixel_parse.rl"
	{ return RGB256( 41,  41,  41); }
	break;
	case 173:
#line 264 "pixel_parse.rl"
	{ return RGB256( 43,  43,  43); }
	break;
	case 174:
#line 265 "pixel_parse.rl"
	{ return RGB256( 46,  46,  46); }
	break;
	case 175:
#line 266 "pixel_parse.rl"
	{ return RGB256( 48,  48,  48); }
	break;
	case 176:
#line 267 "pixel_parse.rl"
	{ return RGB256(  3,   3,   3); }
	break;
	case 177:
#line 268 "pixel_parse.rl"
	{ return RGB256( 51,  51,  51); }
	break;
	case 178:
#line 269 "pixel_parse.rl"
	{ return RGB256( 54,  54,  54); }
	break;
	case 179:
#line 270 "pixel_parse.rl"
	{ return RGB256( 56,  56,  56); }
	break;
	case 180:
#line 271 "pixel_parse.rl"
	{ return RGB256( 59,  59,  59); }
	break;
	case 181:
#line 272 "pixel_parse.rl"
	{ return RGB256( 61,  61,  61); }
	break;
	case 182:
#line 273 "pixel_parse.rl"
	{ return RGB256( 64,  64,  64); }
	break;
	case 183:
#line 274 "pixel_parse.rl"
	{ return RGB256( 66,  66,  66); }
	break;
	case 184:
#line 275 "pixel_parse.rl"
	{ return RGB256( 69,  69,  69); }
	break;
	case 185:
#line 276 "pixel_parse.rl"
	{ return RGB256( 71,  71,  71); }
	break;
	case 186:
#line 277 "pixel_parse.rl"
	{ return RGB256( 74,  74,  74); }
	break;
	case 187:
#line 278 "pixel_parse.rl"
	{ return RGB256(  5,   5,   5); }
	break;
	case 188:
#line 279 "pixel_parse.rl"
	{ return RGB256( 77,  77,  77); }
	break;
	case 189:
#line 280 "pixel_parse.rl"
	{ return RGB256( 79,  79,  79); }
	break;
	case 190:
#line 281 "pixel_parse.rl"
	{ return RGB256( 82,  82,  82); }
	break;
	case 191:
#line 282 "pixel_parse.rl"
	{ return RGB256( 84,  84,  84); }
	break;
	case 192:
#line 283 "pixel_parse.rl"
	{ return RGB256( 87,  87,  87); }
	break;
	case 193:
#line 284 "pixel_parse.rl"
	{ return RGB256( 89,  89,  89); }
	break;
	case 194:
#line 285 "pixel_parse.rl"
	{ return RGB256( 92,  92,  92); }
	break;
	case 195:
#line 286 "pixel_parse.rl"
	{ return RGB256( 94,  94,  94); }
	break;
	case 196:
#line 287 "pixel_parse.rl"
	{ return RGB256( 97,  97,  97); }
	break;
	case 197:
#line 288 "pixel_parse.rl"
	{ return RGB256( 99,  99,  99); }
	break;
	case 198:
#line 289 "pixel_parse.rl"
	{ return RGB256(  8,   8,   8); }
	break;
	case 199:
#line 290 "pixel_parse.rl"
	{ return RGB256(102, 102, 102); }
	break;
	case 200:
#line 291 "pixel_parse.rl"
	{ return RGB256(105, 105, 105); }
	break;
	case 201:
#line 292 "pixel_parse.rl"
	{ return RGB256(107, 107, 107); }
	break;
	case 202:
#line 293 "pixel_parse.rl"
	{ return RGB256(110, 110, 110); }
	break;
	case 203:
#line 294 "pixel_parse.rl"
	{ return RGB256(112, 112, 112); }
	break;
	case 204:
#line 295 "pixel_parse.rl"
	{ return RGB256(115, 115, 115); }
	break;
	case 205:
#line 296 "pixel_parse.rl"
	{ return RGB256(117, 117, 117); }
	break;
	case 206:
#line 297 "pixel_parse.rl"
	{ return RGB256(120, 120, 120); }
	break;
	case 207:
#line 298 "pixel_parse.rl"
	{ return RGB256(122, 122, 122); }
	break;
	case 208:
#line 299 "pixel_parse.rl"
	{ return RGB256(125, 125, 125); }
	break;
	case 209:
#line 300 "pixel_parse.rl"
	{ return RGB256( 10,  10,  10); }
	break;
	case 210:
#line 301 "pixel_parse.rl"
	{ return RGB256(127, 127, 127); }
	break;
	case 211:
#line 302 "pixel_parse.rl"
	{ return RGB256(130, 130, 130); }
	break;
	case 212:
#line 303 "pixel_parse.rl"
	{ return RGB256(133, 133, 133); }
	break;
	case 213:
#line 304 "pixel_parse.rl"
	{ return RGB256(135, 135, 135); }
	break;
	case 214:
#line 305 "pixel_parse.rl"
	{ return RGB256(138, 138, 138); }
	break;
	case 215:
#line 306 "pixel_parse.rl"
	{ return RGB256(140, 140, 140); }
	break;
	case 216:
#line 307 "pixel_parse.rl"
	{ return RGB256(143, 143, 143); }
	break;
	case 217:
#line 308 "pixel_parse.rl"
	{ return RGB256(145, 145, 145); }
	break;
	case 218:
#line 309 "pixel_parse.rl"
	{ return RGB256(148, 148, 148); }
	break;
	case 219:
#line 310 "pixel_parse.rl"
	{ return RGB256(150, 150, 150); }
	break;
	case 220:
#line 311 "pixel_parse.rl"
	{ return RGB256( 13,  13,  13); }
	break;
	case 221:
#line 312 "pixel_parse.rl"
	{ return RGB256(153, 153, 153); }
	break;
	case 222:
#line 313 "pixel_parse.rl"
	{ return RGB256(156, 156, 156); }
	break;
	case 223:
#line 314 "pixel_parse.rl"
	{ return RGB256(158, 158, 158); }
	break;
	case 224:
#line 315 "pixel_parse.rl"
	{ return RGB256(161, 161, 161); }
	break;
	case 225:
#line 316 "pixel_parse.rl"
	{ return RGB256(163, 163, 163); }
	break;
	case 226:
#line 317 "pixel_parse.rl"
	{ return RGB256(166, 166, 166); }
	break;
	case 227:
#line 318 "pixel_parse.rl"
	{ return RGB256(168, 168, 168); }
	break;
	case 228:
#line 319 "pixel_parse.rl"
	{ return RGB256(171, 171, 171); }
	break;
	case 229:
#line 320 "pixel_parse.rl"
	{ return RGB256(173, 173, 173); }
	break;
	case 230:
#line 321 "pixel_parse.rl"
	{ return RGB256(176, 176, 176); }
	break;
	case 231:
#line 322 "pixel_parse.rl"
	{ return RGB256( 15,  15,  15); }
	break;
	case 232:
#line 323 "pixel_parse.rl"
	{ return RGB256(179, 179, 179); }
	break;
	case 233:
#line 324 "pixel_parse.rl"
	{ return RGB256(181, 181, 181); }
	break;
	case 234:
#line 325 "pixel_parse.rl"
	{ return RGB256(184, 184, 184); }
	break;
	case 235:
#line 326 "pixel_parse.rl"
	{ return RGB256(186, 186, 186); }
	break;
	case 236:
#line 327 "pixel_parse.rl"
	{ return RGB256(189, 189, 189); }
	break;
	case 237:
#line 328 "pixel_parse.rl"
	{ return RGB256(191, 191, 191); }
	break;
	case 238:
#line 329 "pixel_parse.rl"
	{ return RGB256(194, 194, 194); }
	break;
	case 239:
#line 330 "pixel_parse.rl"
	{ return RGB256(196, 196, 196); }
	break;
	case 240:
#line 331 "pixel_parse.rl"
	{ return RGB256(199, 199, 199); }
	break;
	case 241:
#line 332 "pixel_parse.rl"
	{ return RGB256(201, 201, 201); }
	break;
	case 242:
#line 333 "pixel_parse.rl"
	{ return RGB256( 18,  18,  18); }
	break;
	case 243:
#line 334 "pixel_parse.rl"
	{ return RGB256(204, 204, 204); }
	break;
	case 244:
#line 335 "pixel_parse.rl"
	{ return RGB256(207, 207, 207); }
	break;
	case 245:
#line 336 "pixel_parse.rl"
	{ return RGB256(209, 209, 209); }
	break;
	case 246:
#line 337 "pixel_parse.rl"
	{ return RGB256(212, 212, 212); }
	break;
	case 247:
#line 338 "pixel_parse.rl"
	{ return RGB256(214, 214, 214); }
	break;
	case 248:
#line 339 "pixel_parse.rl"
	{ return RGB256(217, 217, 217); }
	break;
	case 249:
#line 340 "pixel_parse.rl"
	{ return RGB256(219, 219, 219); }
	break;
	case 250:
#line 341 "pixel_parse.rl"
	{ return RGB256(222, 222, 222); }
	break;
	case 251:
#line 342 "pixel_parse.rl"
	{ return RGB256(224, 224, 224); }
	break;
	case 252:
#line 343 "pixel_parse.rl"
	{ return RGB256(227, 227, 227); }
	break;
	case 253:
#line 344 "pixel_parse.rl"
	{ return RGB256( 20,  20,  20); }
	break;
	case 254:
#line 345 "pixel_parse.rl"
	{ return RGB256(229, 229, 229); }
	break;
	case 255:
#line 346 "pixel_parse.rl"
	{ return RGB256(232, 232, 232); }
	break;
	case 256:
#line 347 "pixel_parse.rl"
	{ return RGB256(235, 235, 235); }
	break;
	case 257:
#line 348 "pixel_parse.rl"
	{ return RGB256(237, 237, 237); }
	break;
	case 258:
#line 349 "pixel_parse.rl"
	{ return RGB256(240, 240, 240); }
	break;
	case 259:
#line 350 "pixel_parse.rl"
	{ return RGB256(242, 242, 242); }
	break;
	case 260:
#line 351 "pixel_parse.rl"
	{ return RGB256(245, 245, 245); }
	break;
	case 261:
#line 352 "pixel_parse.rl"
	{ return RGB256(247, 247, 247); }
	break;
	case 262:
#line 353 "pixel_parse.rl"
	{ return RGB256(250, 250, 250); }
	break;
	case 263:
#line 354 "pixel_parse.rl"
	{ return RGB256(252, 252, 252); }
	break;
	case 264:
#line 355 "pixel_parse.rl"
	{ return RGB256( 23,  23,  23); }
	break;
	case 265:
#line 356 "pixel_parse.rl"
	{ return RGB256(190, 190, 190); }
	break;
	case 266:
#line 357 "pixel_parse.rl"
	{ return RGB256(  0, 255,   0); }
	break;
	case 267:
#line 358 "pixel_parse.rl"
	{ return RGB256(  0, 238,   0); }
	break;
	case 268:
#line 359 "pixel_parse.rl"
	{ return RGB256(  0, 205,   0); }
	break;
	case 269:
#line 360 "pixel_parse.rl"
	{ return RGB256(  0, 139,   0); }
	break;
	case 270:
#line 361 "pixel_parse.rl"
	{ return RGB256(  0, 255,   0); }
	break;
	case 271:
#line 362 "pixel_parse.rl"
	{ return RGB256(173, 255,  47); }
	break;
	case 272:
#line 363 "pixel_parse.rl"
	{ return RGB256(  0,   0,   0); }
	break;
	case 273:
#line 364 "pixel_parse.rl"
	{ return RGB256(255, 255, 255); }
	break;
	case 274:
#line 365 "pixel_parse.rl"
	{ return RGB256( 26,  26,  26); }
	break;
	case 275:
#line 366 "pixel_parse.rl"
	{ return RGB256( 28,  28,  28); }
	break;
	case 276:
#line 367 "pixel_parse.rl"
	{ return RGB256( 31,  31,  31); }
	break;
	case 277:
#line 368 "pixel_parse.rl"
	{ return RGB256( 33,  33,  33); }
	break;
	case 278:
#line 369 "pixel_parse.rl"
	{ return RGB256( 36,  36,  36); }
	break;
	case 279:
#line 370 "pixel_parse.rl"
	{ return RGB256( 38,  38,  38); }
	break;
	case 280:
#line 371 "pixel_parse.rl"
	{ return RGB256( 41,  41,  41); }
	break;
	case 281:
#line 372 "pixel_parse.rl"
	{ return RGB256( 43,  43,  43); }
	break;
	case 282:
#line 373 "pixel_parse.rl"
	{ return RGB256( 46,  46,  46); }
	break;
	case 283:
#line 374 "pixel_parse.rl"
	{ return RGB256( 48,  48,  48); }
	break;
	case 284:
#line 375 "pixel_parse.rl"
	{ return RGB256(  3,   3,   3); }
	break;
	case 285:
#line 376 "pixel_parse.rl"
	{ return RGB256( 51,  51,  51); }
	break;
	case 286:
#line 377 "pixel_parse.rl"
	{ return RGB256( 54,  54,  54); }
	break;
	case 287:
#line 378 "pixel_parse.rl"
	{ return RGB256( 56,  56,  56); }
	break;
	case 288:
#line 379 "pixel_parse.rl"
	{ return RGB256( 59,  59,  59); }
	break;
	case 289:
#line 380 "pixel_parse.rl"
	{ return RGB256( 61,  61,  61); }
	break;
	case 290:
#line 381 "pixel_parse.rl"
	{ return RGB256( 64,  64,  64); }
	break;
	case 291:
#line 382 "pixel_parse.rl"
	{ return RGB256( 66,  66,  66); }
	break;
	case 292:
#line 383 "pixel_parse.rl"
	{ return RGB256( 69,  69,  69); }
	break;
	case 293:
#line 384 "pixel_parse.rl"
	{ return RGB256( 71,  71,  71); }
	break;
	case 294:
#line 385 "pixel_parse.rl"
	{ return RGB256( 74,  74,  74); }
	break;
	case 295:
#line 386 "pixel_parse.rl"
	{ return RGB256(  5,   5,   5); }
	break;
	case 296:
#line 387 "pixel_parse.rl"
	{ return RGB256( 77,  77,  77); }
	break;
	case 297:
#line 388 "pixel_parse.rl"
	{ return RGB256( 79,  79,  79); }
	break;
	case 298:
#line 389 "pixel_parse.rl"
	{ return RGB256( 82,  82,  82); }
	break;
	case 299:
#line 390 "pixel_parse.rl"
	{ return RGB256( 84,  84,  84); }
	break;
	case 300:
#line 391 "pixel_parse.rl"
	{ return RGB256( 87,  87,  87); }
	break;
	case 301:
#line 392 "pixel_parse.rl"
	{ return RGB256( 89,  89,  89); }
	break;
	case 302:
#line 393 "pixel_parse.rl"
	{ return RGB256( 92,  92,  92); }
	break;
	case 303:
#line 394 "pixel_parse.rl"
	{ return RGB256( 94,  94,  94); }
	break;
	case 304:
#line 395 "pixel_parse.rl"
	{ return RGB256( 97,  97,  97); }
	break;
	case 305:
#line 396 "pixel_parse.rl"
	{ return RGB256( 99,  99,  99); }
	break;
	case 306:
#line 397 "pixel_parse.rl"
	{ return RGB256(  8,   8,   8); }
	break;
	case 307:
#line 398 "pixel_parse.rl"
	{ return RGB256(102, 102, 102); }
	break;
	case 308:
#line 399 "pixel_parse.rl"
	{ return RGB256(105, 105, 105); }
	break;
	case 309:
#line 400 "pixel_parse.rl"
	{ return RGB256(107, 107, 107); }
	break;
	case 310:
#line 401 "pixel_parse.rl"
	{ return RGB256(110, 110, 110); }
	break;
	case 311:
#line 402 "pixel_parse.rl"
	{ return RGB256(112, 112, 112); }
	break;
	case 312:
#line 403 "pixel_parse.rl"
	{ return RGB256(115, 115, 115); }
	break;
	case 313:
#line 404 "pixel_parse.rl"
	{ return RGB256(117, 117, 117); }
	break;
	case 314:
#line 405 "pixel_parse.rl"
	{ return RGB256(120, 120, 120); }
	break;
	case 315:
#line 406 "pixel_parse.rl"
	{ return RGB256(122, 122, 122); }
	break;
	case 316:
#line 407 "pixel_parse.rl"
	{ return RGB256(125, 125, 125); }
	break;
	case 317:
#line 408 "pixel_parse.rl"
	{ return RGB256( 10,  10,  10); }
	break;
	case 318:
#line 409 "pixel_parse.rl"
	{ return RGB256(127, 127, 127); }
	break;
	case 319:
#line 410 "pixel_parse.rl"
	{ return RGB256(130, 130, 130); }
	break;
	case 320:
#line 411 "pixel_parse.rl"
	{ return RGB256(133, 133, 133); }
	break;
	case 321:
#line 412 "pixel_parse.rl"
	{ return RGB256(135, 135, 135); }
	break;
	case 322:
#line 413 "pixel_parse.rl"
	{ return RGB256(138, 138, 138); }
	break;
	case 323:
#line 414 "pixel_parse.rl"
	{ return RGB256(140, 140, 140); }
	break;
	case 324:
#line 415 "pixel_parse.rl"
	{ return RGB256(143, 143, 143); }
	break;
	case 325:
#line 416 "pixel_parse.rl"
	{ return RGB256(145, 145, 145); }
	break;
	case 326:
#line 417 "pixel_parse.rl"
	{ return RGB256(148, 148, 148); }
	break;
	case 327:
#line 418 "pixel_parse.rl"
	{ return RGB256(150, 150, 150); }
	break;
	case 328:
#line 419 "pixel_parse.rl"
	{ return RGB256( 13,  13,  13); }
	break;
	case 329:
#line 420 "pixel_parse.rl"
	{ return RGB256(153, 153, 153); }
	break;
	case 330:
#line 421 "pixel_parse.rl"
	{ return RGB256(156, 156, 156); }
	break;
	case 331:
#line 422 "pixel_parse.rl"
	{ return RGB256(158, 158, 158); }
	break;
	case 332:
#line 423 "pixel_parse.rl"
	{ return RGB256(161, 161, 161); }
	break;
	case 333:
#line 424 "pixel_parse.rl"
	{ return RGB256(163, 163, 163); }
	break;
	case 334:
#line 425 "pixel_parse.rl"
	{ return RGB256(166, 166, 166); }
	break;
	case 335:
#line 426 "pixel_parse.rl"
	{ return RGB256(168, 168, 168); }
	break;
	case 336:
#line 427 "pixel_parse.rl"
	{ return RGB256(171, 171, 171); }
	break;
	case 337:
#line 428 "pixel_parse.rl"
	{ return RGB256(173, 173, 173); }
	break;
	case 338:
#line 429 "pixel_parse.rl"
	{ return RGB256(176, 176, 176); }
	break;
	case 339:
#line 430 "pixel_parse.rl"
	{ return RGB256( 15,  15,  15); }
	break;
	case 340:
#line 431 "pixel_parse.rl"
	{ return RGB256(179, 179, 179); }
	break;
	case 341:
#line 432 "pixel_parse.rl"
	{ return RGB256(181, 181, 181); }
	break;
	case 342:
#line 433 "pixel_parse.rl"
	{ return RGB256(184, 184, 184); }
	break;
	case 343:
#line 434 "pixel_parse.rl"
	{ return RGB256(186, 186, 186); }
	break;
	case 344:
#line 435 "pixel_parse.rl"
	{ return RGB256(189, 189, 189); }
	break;
	case 345:
#line 436 "pixel_parse.rl"
	{ return RGB256(191, 191, 191); }
	break;
	case 346:
#line 437 "pixel_parse.rl"
	{ return RGB256(194, 194, 194); }
	break;
	case 347:
#line 438 "pixel_parse.rl"
	{ return RGB256(196, 196, 196); }
	break;
	case 348:
#line 439 "pixel_parse.rl"
	{ return RGB256(199, 199, 199); }
	break;
	case 349:
#line 440 "pixel_parse.rl"
	{ return RGB256(201, 201, 201); }
	break;
	case 350:
#line 441 "pixel_parse.rl"
	{ return RGB256( 18,  18,  18); }
	break;
	case 351:
#line 442 "pixel_parse.rl"
	{ return RGB256(204, 204, 204); }
	break;
	case 352:
#line 443 "pixel_parse.rl"
	{ return RGB256(207, 207, 207); }
	break;
	case 353:
#line 444 "pixel_parse.rl"
	{ return RGB256(209, 209, 209); }
	break;
	case 354:
#line 445 "pixel_parse.rl"
	{ return RGB256(212, 212, 212); }
	break;
	case 355:
#line 446 "pixel_parse.rl"
	{ return RGB256(214, 214, 214); }
	break;
	case 356:
#line 447 "pixel_parse.rl"
	{ return RGB256(217, 217, 217); }
	break;
	case 357:
#line 448 "pixel_parse.rl"
	{ return RGB256(219, 219, 219); }
	break;
	case 358:
#line 449 "pixel_parse.rl"
	{ return RGB256(222, 222, 222); }
	break;
	case 359:
#line 450 "pixel_parse.rl"
	{ return RGB256(224, 224, 224); }
	break;
	case 360:
#line 451 "pixel_parse.rl"
	{ return RGB256(227, 227, 227); }
	break;
	case 361:
#line 452 "pixel_parse.rl"
	{ return RGB256( 20,  20,  20); }
	break;
	case 362:
#line 453 "pixel_parse.rl"
	{ return RGB256(229, 229, 229); }
	break;
	case 363:
#line 454 "pixel_parse.rl"
	{ return RGB256(232, 232, 232); }
	break;
	case 364:
#line 455 "pixel_parse.rl"
	{ return RGB256(235, 235, 235); }
	break;
	case 365:
#line 456 "pixel_parse.rl"
	{ return RGB256(237, 237, 237); }
	break;
	case 366:
#line 457 "pixel_parse.rl"
	{ return RGB256(240, 240, 240); }
	break;
	case 367:
#line 458 "pixel_parse.rl"
	{ return RGB256(242, 242, 242); }
	break;
	case 368:
#line 459 "pixel_parse.rl"
	{ return RGB256(245, 245, 245); }
	break;
	case 369:
#line 460 "pixel_parse.rl"
	{ return RGB256(247, 247, 247); }
	break;
	case 370:
#line 461 "pixel_parse.rl"
	{ return RGB256(250, 250, 250); }
	break;
	case 371:
#line 462 "pixel_parse.rl"
	{ return RGB256(252, 252, 252); }
	break;
	case 372:
#line 463 "pixel_parse.rl"
	{ return RGB256( 23,  23,  23); }
	break;
	case 373:
#line 464 "pixel_parse.rl"
	{ return RGB256(190, 190, 190); }
	break;
	case 374:
#line 465 "pixel_parse.rl"
	{ return RGB256(240, 255, 240); }
	break;
	case 375:
#line 466 "pixel_parse.rl"
	{ return RGB256(224, 238, 224); }
	break;
	case 376:
#line 467 "pixel_parse.rl"
	{ return RGB256(193, 205, 193); }
	break;
	case 377:
#line 468 "pixel_parse.rl"
	{ return RGB256(131, 139, 131); }
	break;
	case 378:
#line 469 "pixel_parse.rl"
	{ return RGB256(240, 255, 240); }
	break;
	case 379:
#line 470 "pixel_parse.rl"
	{ return RGB256(255, 110, 180); }
	break;
	case 380:
#line 471 "pixel_parse.rl"
	{ return RGB256(238, 106, 167); }
	break;
	case 381:
#line 472 "pixel_parse.rl"
	{ return RGB256(205,  96, 144); }
	break;
	case 382:
#line 473 "pixel_parse.rl"
	{ return RGB256(139,  58,  98); }
	break;
	case 383:
#line 474 "pixel_parse.rl"
	{ return RGB256(255, 105, 180); }
	break;
	case 384:
#line 475 "pixel_parse.rl"
	{ return RGB256(255, 106, 106); }
	break;
	case 385:
#line 476 "pixel_parse.rl"
	{ return RGB256(238,  99,  99); }
	break;
	case 386:
#line 477 "pixel_parse.rl"
	{ return RGB256(205,  85,  85); }
	break;
	case 387:
#line 478 "pixel_parse.rl"
	{ return RGB256(139,  58,  58); }
	break;
	case 388:
#line 479 "pixel_parse.rl"
	{ return RGB256(205,  92,  92); }
	break;
	case 389:
#line 480 "pixel_parse.rl"
	{ return RGB256(255, 255, 240); }
	break;
	case 390:
#line 481 "pixel_parse.rl"
	{ return RGB256(238, 238, 224); }
	break;
	case 391:
#line 482 "pixel_parse.rl"
	{ return RGB256(205, 205, 193); }
	break;
	case 392:
#line 483 "pixel_parse.rl"
	{ return RGB256(139, 139, 131); }
	break;
	case 393:
#line 484 "pixel_parse.rl"
	{ return RGB256(255, 255, 240); }
	break;
	case 394:
#line 485 "pixel_parse.rl"
	{ return RGB256(255, 246, 143); }
	break;
	case 395:
#line 486 "pixel_parse.rl"
	{ return RGB256(238, 230, 133); }
	break;
	case 396:
#line 487 "pixel_parse.rl"
	{ return RGB256(205, 198, 115); }
	break;
	case 397:
#line 488 "pixel_parse.rl"
	{ return RGB256(139, 134,  78); }
	break;
	case 398:
#line 489 "pixel_parse.rl"
	{ return RGB256(240, 230, 140); }
	break;
	case 399:
#line 490 "pixel_parse.rl"
	{ return RGB256(255, 240, 245); }
	break;
	case 400:
#line 491 "pixel_parse.rl"
	{ return RGB256(238, 224, 229); }
	break;
	case 401:
#line 492 "pixel_parse.rl"
	{ return RGB256(205, 193, 197); }
	break;
	case 402:
#line 493 "pixel_parse.rl"
	{ return RGB256(139, 131, 134); }
	break;
	case 403:
#line 494 "pixel_parse.rl"
	{ return RGB256(255, 240, 245); }
	break;
	case 404:
#line 495 "pixel_parse.rl"
	{ return RGB256(230, 230, 250); }
	break;
	case 405:
#line 496 "pixel_parse.rl"
	{ return RGB256(124, 252,   0); }
	break;
	case 406:
#line 497 "pixel_parse.rl"
	{ return RGB256(255, 250, 205); }
	break;
	case 407:
#line 498 "pixel_parse.rl"
	{ return RGB256(238, 233, 191); }
	break;
	case 408:
#line 499 "pixel_parse.rl"
	{ return RGB256(205, 201, 165); }
	break;
	case 409:
#line 500 "pixel_parse.rl"
	{ return RGB256(139, 137, 112); }
	break;
	case 410:
#line 501 "pixel_parse.rl"
	{ return RGB256(255, 250, 205); }
	break;
	case 411:
#line 502 "pixel_parse.rl"
	{ return RGB256(191, 239, 255); }
	break;
	case 412:
#line 503 "pixel_parse.rl"
	{ return RGB256(178, 223, 238); }
	break;
	case 413:
#line 504 "pixel_parse.rl"
	{ return RGB256(154, 192, 205); }
	break;
	case 414:
#line 505 "pixel_parse.rl"
	{ return RGB256(104, 131, 139); }
	break;
	case 415:
#line 506 "pixel_parse.rl"
	{ return RGB256(173, 216, 230); }
	break;
	case 416:
#line 507 "pixel_parse.rl"
	{ return RGB256(240, 128, 128); }
	break;
	case 417:
#line 508 "pixel_parse.rl"
	{ return RGB256(224, 255, 255); }
	break;
	case 418:
#line 509 "pixel_parse.rl"
	{ return RGB256(209, 238, 238); }
	break;
	case 419:
#line 510 "pixel_parse.rl"
	{ return RGB256(180, 205, 205); }
	break;
	case 420:
#line 511 "pixel_parse.rl"
	{ return RGB256(122, 139, 139); }
	break;
	case 421:
#line 512 "pixel_parse.rl"
	{ return RGB256(224, 255, 255); }
	break;
	case 422:
#line 513 "pixel_parse.rl"
	{ return RGB256(255, 236, 139); }
	break;
	case 423:
#line 514 "pixel_parse.rl"
	{ return RGB256(238, 220, 130); }
	break;
	case 424:
#line 515 "pixel_parse.rl"
	{ return RGB256(205, 190, 112); }
	break;
	case 425:
#line 516 "pixel_parse.rl"
	{ return RGB256(139, 129,  76); }
	break;
	case 426:
#line 517 "pixel_parse.rl"
	{ return RGB256(238, 221, 130); }
	break;
	case 427:
#line 518 "pixel_parse.rl"
	{ return RGB256(250, 250, 210); }
	break;
	case 428:
#line 519 "pixel_parse.rl"
	{ return RGB256(211, 211, 211); }
	break;
	case 429:
#line 520 "pixel_parse.rl"
	{ return RGB256(144, 238, 144); }
	break;
	case 430:
#line 521 "pixel_parse.rl"
	{ return RGB256(211, 211, 211); }
	break;
	case 431:
#line 522 "pixel_parse.rl"
	{ return RGB256(255, 174, 185); }
	break;
	case 432:
#line 523 "pixel_parse.rl"
	{ return RGB256(238, 162, 173); }
	break;
	case 433:
#line 524 "pixel_parse.rl"
	{ return RGB256(205, 140, 149); }
	break;
	case 434:
#line 525 "pixel_parse.rl"
	{ return RGB256(139,  95, 101); }
	break;
	case 435:
#line 526 "pixel_parse.rl"
	{ return RGB256(255, 182, 193); }
	break;
	case 436:
#line 527 "pixel_parse.rl"
	{ return RGB256(255, 160, 122); }
	break;
	case 437:
#line 528 "pixel_parse.rl"
	{ return RGB256(238, 149, 114); }
	break;
	case 438:
#line 529 "pixel_parse.rl"
	{ return RGB256(205, 129,  98); }
	break;
	case 439:
#line 530 "pixel_parse.rl"
	{ return RGB256(139,  87,  66); }
	break;
	case 440:
#line 531 "pixel_parse.rl"
	{ return RGB256(255, 160, 122); }
	break;
	case 441:
#line 532 "pixel_parse.rl"
	{ return RGB256( 32, 178, 170); }
	break;
	case 442:
#line 533 "pixel_parse.rl"
	{ return RGB256(176, 226, 255); }
	break;
	case 443:
#line 534 "pixel_parse.rl"
	{ return RGB256(164, 211, 238); }
	break;
	case 444:
#line 535 "pixel_parse.rl"
	{ return RGB256(141, 182, 205); }
	break;
	case 445:
#line 536 "pixel_parse.rl"
	{ return RGB256( 96, 123, 139); }
	break;
	case 446:
#line 537 "pixel_parse.rl"
	{ return RGB256(135, 206, 250); }
	break;
	case 447:
#line 538 "pixel_parse.rl"
	{ return RGB256(132, 112, 255); }
	break;
	case 448:
#line 539 "pixel_parse.rl"
	{ return RGB256(119, 136, 153); }
	break;
	case 449:
#line 540 "pixel_parse.rl"
	{ return RGB256(119, 136, 153); }
	break;
	case 450:
#line 541 "pixel_parse.rl"
	{ return RGB256(202, 225, 255); }
	break;
	case 451:
#line 542 "pixel_parse.rl"
	{ return RGB256(188, 210, 238); }
	break;
	case 452:
#line 543 "pixel_parse.rl"
	{ return RGB256(162, 181, 205); }
	break;
	case 453:
#line 544 "pixel_parse.rl"
	{ return RGB256(110, 123, 139); }
	break;
	case 454:
#line 545 "pixel_parse.rl"
	{ return RGB256(176, 196, 222); }
	break;
	case 455:
#line 546 "pixel_parse.rl"
	{ return RGB256(255, 255, 224); }
	break;
	case 456:
#line 547 "pixel_parse.rl"
	{ return RGB256(238, 238, 209); }
	break;
	case 457:
#line 548 "pixel_parse.rl"
	{ return RGB256(205, 205, 180); }
	break;
	case 458:
#line 549 "pixel_parse.rl"
	{ return RGB256(139, 139, 122); }
	break;
	case 459:
#line 550 "pixel_parse.rl"
	{ return RGB256(255, 255, 224); }
	break;
	case 460:
#line 551 "pixel_parse.rl"
	{ return RGB256( 50, 205,  50); }
	break;
	case 461:
#line 552 "pixel_parse.rl"
	{ return RGB256(250, 240, 230); }
	break;
	case 462:
#line 553 "pixel_parse.rl"
	{ return RGB256(255,   0, 255); }
	break;
	case 463:
#line 554 "pixel_parse.rl"
	{ return RGB256(238,   0, 238); }
	break;
	case 464:
#line 555 "pixel_parse.rl"
	{ return RGB256(205,   0, 205); }
	break;
	case 465:
#line 556 "pixel_parse.rl"
	{ return RGB256(139,   0, 139); }
	break;
	case 466:
#line 557 "pixel_parse.rl"
	{ return RGB256(255,   0, 255); }
	break;
	case 467:
#line 558 "pixel_parse.rl"
	{ return RGB256(255,  52, 179); }
	break;
	case 468:
#line 559 "pixel_parse.rl"
	{ return RGB256(238,  48, 167); }
	break;
	case 469:
#line 560 "pixel_parse.rl"
	{ return RGB256(205,  41, 144); }
	break;
	case 470:
#line 561 "pixel_parse.rl"
	{ return RGB256(139,  28,  98); }
	break;
	case 471:
#line 562 "pixel_parse.rl"
	{ return RGB256(176,  48,  96); }
	break;
	case 472:
#line 563 "pixel_parse.rl"
	{ return RGB256(102, 205, 170); }
	break;
	case 473:
#line 564 "pixel_parse.rl"
	{ return RGB256(  0,   0, 205); }
	break;
	case 474:
#line 565 "pixel_parse.rl"
	{ return RGB256(224, 102, 255); }
	break;
	case 475:
#line 566 "pixel_parse.rl"
	{ return RGB256(209,  95, 238); }
	break;
	case 476:
#line 567 "pixel_parse.rl"
	{ return RGB256(180,  82, 205); }
	break;
	case 477:
#line 568 "pixel_parse.rl"
	{ return RGB256(122,  55, 139); }
	break;
	case 478:
#line 569 "pixel_parse.rl"
	{ return RGB256(186,  85, 211); }
	break;
	case 479:
#line 570 "pixel_parse.rl"
	{ return RGB256(171, 130, 255); }
	break;
	case 480:
#line 571 "pixel_parse.rl"
	{ return RGB256(159, 121, 238); }
	break;
	case 481:
#line 572 "pixel_parse.rl"
	{ return RGB256(137, 104, 205); }
	break;
	case 482:
#line 573 "pixel_parse.rl"
	{ return RGB256( 93,  71, 139); }
	break;
	case 483:
#line 574 "pixel_parse.rl"
	{ return RGB256(147, 112, 219); }
	break;
	case 484:
#line 575 "pixel_parse.rl"
	{ return RGB256( 60, 179, 113); }
	break;
	case 485:
#line 576 "pixel_parse.rl"
	{ return RGB256(123, 104, 238); }
	break;
	case 486:
#line 577 "pixel_parse.rl"
	{ return RGB256(  0, 250, 154); }
	break;
	case 487:
#line 578 "pixel_parse.rl"
	{ return RGB256( 72, 209, 204); }
	break;
	case 488:
#line 579 "pixel_parse.rl"
	{ return RGB256(199,  21, 133); }
	break;
	case 489:
#line 580 "pixel_parse.rl"
	{ return RGB256( 25,  25, 112); }
	break;
	case 490:
#line 581 "pixel_parse.rl"
	{ return RGB256(245, 255, 250); }
	break;
	case 491:
#line 582 "pixel_parse.rl"
	{ return RGB256(255, 228, 225); }
	break;
	case 492:
#line 583 "pixel_parse.rl"
	{ return RGB256(238, 213, 210); }
	break;
	case 493:
#line 584 "pixel_parse.rl"
	{ return RGB256(205, 183, 181); }
	break;
	case 494:
#line 585 "pixel_parse.rl"
	{ return RGB256(139, 125, 123); }
	break;
	case 495:
#line 586 "pixel_parse.rl"
	{ return RGB256(255, 228, 225); }
	break;
	case 496:
#line 587 "pixel_parse.rl"
	{ return RGB256(255, 228, 181); }
	break;
	case 497:
#line 588 "pixel_parse.rl"
	{ return RGB256(255, 222, 173); }
	break;
	case 498:
#line 589 "pixel_parse.rl"
	{ return RGB256(238, 207, 161); }
	break;
	case 499:
#line 590 "pixel_parse.rl"
	{ return RGB256(205, 179, 139); }
	break;
	case 500:
#line 591 "pixel_parse.rl"
	{ return RGB256(139, 121,  94); }
	break;
	case 501:
#line 592 "pixel_parse.rl"
	{ return RGB256(255, 222, 173); }
	break;
	case 502:
#line 593 "pixel_parse.rl"
	{ return RGB256(  0,   0, 128); }
	break;
	case 503:
#line 594 "pixel_parse.rl"
	{ return RGB256(  0,   0, 128); }
	break;
	case 504:
#line 595 "pixel_parse.rl"
	{ return RGB256(253, 245, 230); }
	break;
	case 505:
#line 596 "pixel_parse.rl"
	{ return RGB256(192, 255,  62); }
	break;
	case 506:
#line 597 "pixel_parse.rl"
	{ return RGB256(179, 238,  58); }
	break;
	case 507:
#line 598 "pixel_parse.rl"
	{ return RGB256(154, 205,  50); }
	break;
	case 508:
#line 599 "pixel_parse.rl"
	{ return RGB256(105, 139,  34); }
	break;
	case 509:
#line 600 "pixel_parse.rl"
	{ return RGB256(107, 142,  35); }
	break;
	case 510:
#line 601 "pixel_parse.rl"
	{ return RGB256(255, 165,   0); }
	break;
	case 511:
#line 602 "pixel_parse.rl"
	{ return RGB256(238, 154,   0); }
	break;
	case 512:
#line 603 "pixel_parse.rl"
	{ return RGB256(205, 133,   0); }
	break;
	case 513:
#line 604 "pixel_parse.rl"
	{ return RGB256(139,  90,   0); }
	break;
	case 514:
#line 605 "pixel_parse.rl"
	{ return RGB256(255, 165,   0); }
	break;
	case 515:
#line 606 "pixel_parse.rl"
	{ return RGB256(255,  69,   0); }
	break;
	case 516:
#line 607 "pixel_parse.rl"
	{ return RGB256(238,  64,   0); }
	break;
	case 517:
#line 608 "pixel_parse.rl"
	{ return RGB256(205,  55,   0); }
	break;
	case 518:
#line 609 "pixel_parse.rl"
	{ return RGB256(139,  37,   0); }
	break;
	case 519:
#line 610 "pixel_parse.rl"
	{ return RGB256(255,  69,   0); }
	break;
	case 520:
#line 611 "pixel_parse.rl"
	{ return RGB256(255, 131, 250); }
	break;
	case 521:
#line 612 "pixel_parse.rl"
	{ return RGB256(238, 122, 233); }
	break;
	case 522:
#line 613 "pixel_parse.rl"
	{ return RGB256(205, 105, 201); }
	break;
	case 523:
#line 614 "pixel_parse.rl"
	{ return RGB256(139,  71, 137); }
	break;
	case 524:
#line 615 "pixel_parse.rl"
	{ return RGB256(218, 112, 214); }
	break;
	case 525:
#line 616 "pixel_parse.rl"
	{ return RGB256(238, 232, 170); }
	break;
	case 526:
#line 617 "pixel_parse.rl"
	{ return RGB256(154, 255, 154); }
	break;
	case 527:
#line 618 "pixel_parse.rl"
	{ return RGB256(144, 238, 144); }
	break;
	case 528:
#line 619 "pixel_parse.rl"
	{ return RGB256(124, 205, 124); }
	break;
	case 529:
#line 620 "pixel_parse.rl"
	{ return RGB256( 84, 139,  84); }
	break;
	case 530:
#line 621 "pixel_parse.rl"
	{ return RGB256(152, 251, 152); }
	break;
	case 531:
#line 622 "pixel_parse.rl"
	{ return RGB256(187, 255, 255); }
	break;
	case 532:
#line 623 "pixel_parse.rl"
	{ return RGB256(174, 238, 238); }
	break;
	case 533:
#line 624 "pixel_parse.rl"
	{ return RGB256(150, 205, 205); }
	break;
	case 534:
#line 625 "pixel_parse.rl"
	{ return RGB256(102, 139, 139); }
	break;
	case 535:
#line 626 "pixel_parse.rl"
	{ return RGB256(175, 238, 238); }
	break;
	case 536:
#line 627 "pixel_parse.rl"
	{ return RGB256(255, 130, 171); }
	break;
	case 537:
#line 628 "pixel_parse.rl"
	{ return RGB256(238, 121, 159); }
	break;
	case 538:
#line 629 "pixel_parse.rl"
	{ return RGB256(205, 104, 137); }
	break;
	case 539:
#line 630 "pixel_parse.rl"
	{ return RGB256(139,  71,  93); }
	break;
	case 540:
#line 631 "pixel_parse.rl"
	{ return RGB256(219, 112, 147); }
	break;
	case 541:
#line 632 "pixel_parse.rl"
	{ return RGB256(255, 239, 213); }
	break;
	case 542:
#line 633 "pixel_parse.rl"
	{ return RGB256(255, 218, 185); }
	break;
	case 543:
#line 634 "pixel_parse.rl"
	{ return RGB256(238, 203, 173); }
	break;
	case 544:
#line 635 "pixel_parse.rl"
	{ return RGB256(205, 175, 149); }
	break;
	case 545:
#line 636 "pixel_parse.rl"
	{ return RGB256(139, 119, 101); }
	break;
	case 546:
#line 637 "pixel_parse.rl"
	{ return RGB256(255, 218, 185); }
	break;
	case 547:
#line 638 "pixel_parse.rl"
	{ return RGB256(205, 133,  63); }
	break;
	case 548:
#line 639 "pixel_parse.rl"
	{ return RGB256(255, 181, 197); }
	break;
	case 549:
#line 640 "pixel_parse.rl"
	{ return RGB256(238, 169, 184); }
	break;
	case 550:
#line 641 "pixel_parse.rl"
	{ return RGB256(205, 145, 158); }
	break;
	case 551:
#line 642 "pixel_parse.rl"
	{ return RGB256(139,  99, 108); }
	break;
	case 552:
#line 643 "pixel_parse.rl"
	{ return RGB256(255, 192, 203); }
	break;
	case 553:
#line 644 "pixel_parse.rl"
	{ return RGB256(255, 187, 255); }
	break;
	case 554:
#line 645 "pixel_parse.rl"
	{ return RGB256(238, 174, 238); }
	break;
	case 555:
#line 646 "pixel_parse.rl"
	{ return RGB256(205, 150, 205); }
	break;
	case 556:
#line 647 "pixel_parse.rl"
	{ return RGB256(139, 102, 139); }
	break;
	case 557:
#line 648 "pixel_parse.rl"
	{ return RGB256(221, 160, 221); }
	break;
	case 558:
#line 649 "pixel_parse.rl"
	{ return RGB256(176, 224, 230); }
	break;
	case 559:
#line 650 "pixel_parse.rl"
	{ return RGB256(155,  48, 255); }
	break;
	case 560:
#line 651 "pixel_parse.rl"
	{ return RGB256(145,  44, 238); }
	break;
	case 561:
#line 652 "pixel_parse.rl"
	{ return RGB256(125,  38, 205); }
	break;
	case 562:
#line 653 "pixel_parse.rl"
	{ return RGB256( 85,  26, 139); }
	break;
	case 563:
#line 654 "pixel_parse.rl"
	{ return RGB256(160,  32, 240); }
	break;
	case 564:
#line 655 "pixel_parse.rl"
	{ return RGB256(255,   0,   0); }
	break;
	case 565:
#line 656 "pixel_parse.rl"
	{ return RGB256(238,   0,   0); }
	break;
	case 566:
#line 657 "pixel_parse.rl"
	{ return RGB256(205,   0,   0); }
	break;
	case 567:
#line 658 "pixel_parse.rl"
	{ return RGB256(139,   0,   0); }
	break;
	case 568:
#line 659 "pixel_parse.rl"
	{ return RGB256(255,   0,   0); }
	break;
	case 569:
#line 660 "pixel_parse.rl"
	{ return RGB256(255, 193, 193); }
	break;
	case 570:
#line 661 "pixel_parse.rl"
	{ return RGB256(238, 180, 180); }
	break;
	case 571:
#line 662 "pixel_parse.rl"
	{ return RGB256(205, 155, 155); }
	break;
	case 572:
#line 663 "pixel_parse.rl"
	{ return RGB256(139, 105, 105); }
	break;
	case 573:
#line 664 "pixel_parse.rl"
	{ return RGB256(188, 143, 143); }
	break;
	case 574:
#line 665 "pixel_parse.rl"
	{ return RGB256( 72, 118, 255); }
	break;
	case 575:
#line 666 "pixel_parse.rl"
	{ return RGB256( 67, 110, 238); }
	break;
	case 576:
#line 667 "pixel_parse.rl"
	{ return RGB256( 58,  95, 205); }
	break;
	case 577:
#line 668 "pixel_parse.rl"
	{ return RGB256( 39,  64, 139); }
	break;
	case 578:
#line 669 "pixel_parse.rl"
	{ return RGB256( 65, 105, 225); }
	break;
	case 579:
#line 670 "pixel_parse.rl"
	{ return RGB256(139,  69,  19); }
	break;
	case 580:
#line 671 "pixel_parse.rl"
	{ return RGB256(255, 140, 105); }
	break;
	case 581:
#line 672 "pixel_parse.rl"
	{ return RGB256(238, 130,  98); }
	break;
	case 582:
#line 673 "pixel_parse.rl"
	{ return RGB256(205, 112,  84); }
	break;
	case 583:
#line 674 "pixel_parse.rl"
	{ return RGB256(139,  76,  57); }
	break;
	case 584:
#line 675 "pixel_parse.rl"
	{ return RGB256(250, 128, 114); }
	break;
	case 585:
#line 676 "pixel_parse.rl"
	{ return RGB256(244, 164,  96); }
	break;
	case 586:
#line 677 "pixel_parse.rl"
	{ return RGB256( 84, 255, 159); }
	break;
	case 587:
#line 678 "pixel_parse.rl"
	{ return RGB256( 78, 238, 148); }
	break;
	case 588:
#line 679 "pixel_parse.rl"
	{ return RGB256( 67, 205, 128); }
	break;
	case 589:
#line 680 "pixel_parse.rl"
	{ return RGB256( 46, 139,  87); }
	break;
	case 590:
#line 681 "pixel_parse.rl"
	{ return RGB256( 46, 139,  87); }
	break;
	case 591:
#line 682 "pixel_parse.rl"
	{ return RGB256(255, 245, 238); }
	break;
	case 592:
#line 683 "pixel_parse.rl"
	{ return RGB256(238, 229, 222); }
	break;
	case 593:
#line 684 "pixel_parse.rl"
	{ return RGB256(205, 197, 191); }
	break;
	case 594:
#line 685 "pixel_parse.rl"
	{ return RGB256(139, 134, 130); }
	break;
	case 595:
#line 686 "pixel_parse.rl"
	{ return RGB256(255, 245, 238); }
	break;
	case 596:
#line 687 "pixel_parse.rl"
	{ return RGB256(255, 130,  71); }
	break;
	case 597:
#line 688 "pixel_parse.rl"
	{ return RGB256(238, 121,  66); }
	break;
	case 598:
#line 689 "pixel_parse.rl"
	{ return RGB256(205, 104,  57); }
	break;
	case 599:
#line 690 "pixel_parse.rl"
	{ return RGB256(139,  71,  38); }
	break;
	case 600:
#line 691 "pixel_parse.rl"
	{ return RGB256(160,  82,  45); }
	break;
	case 601:
#line 692 "pixel_parse.rl"
	{ return RGB256(135, 206, 255); }
	break;
	case 602:
#line 693 "pixel_parse.rl"
	{ return RGB256(126, 192, 238); }
	break;
	case 603:
#line 694 "pixel_parse.rl"
	{ return RGB256(108, 166, 205); }
	break;
	case 604:
#line 695 "pixel_parse.rl"
	{ return RGB256( 74, 112, 139); }
	break;
	case 605:
#line 696 "pixel_parse.rl"
	{ return RGB256(135, 206, 235); }
	break;
	case 606:
#line 697 "pixel_parse.rl"
	{ return RGB256(131, 111, 255); }
	break;
	case 607:
#line 698 "pixel_parse.rl"
	{ return RGB256(122, 103, 238); }
	break;
	case 608:
#line 699 "pixel_parse.rl"
	{ return RGB256(105,  89, 205); }
	break;
	case 609:
#line 700 "pixel_parse.rl"
	{ return RGB256( 71,  60, 139); }
	break;
	case 610:
#line 701 "pixel_parse.rl"
	{ return RGB256(106,  90, 205); }
	break;
	case 611:
#line 702 "pixel_parse.rl"
	{ return RGB256(198, 226, 255); }
	break;
	case 612:
#line 703 "pixel_parse.rl"
	{ return RGB256(185, 211, 238); }
	break;
	case 613:
#line 704 "pixel_parse.rl"
	{ return RGB256(159, 182, 205); }
	break;
	case 614:
#line 705 "pixel_parse.rl"
	{ return RGB256(108, 123, 139); }
	break;
	case 615:
#line 706 "pixel_parse.rl"
	{ return RGB256(112, 128, 144); }
	break;
	case 616:
#line 707 "pixel_parse.rl"
	{ return RGB256(112, 128, 144); }
	break;
	case 617:
#line 708 "pixel_parse.rl"
	{ return RGB256(255, 250, 250); }
	break;
	case 618:
#line 709 "pixel_parse.rl"
	{ return RGB256(238, 233, 233); }
	break;
	case 619:
#line 710 "pixel_parse.rl"
	{ return RGB256(205, 201, 201); }
	break;
	case 620:
#line 711 "pixel_parse.rl"
	{ return RGB256(139, 137, 137); }
	break;
	case 621:
#line 712 "pixel_parse.rl"
	{ return RGB256(255, 250, 250); }
	break;
	case 622:
#line 713 "pixel_parse.rl"
	{ return RGB256(  0, 255, 127); }
	break;
	case 623:
#line 714 "pixel_parse.rl"
	{ return RGB256(  0, 238, 118); }
	break;
	case 624:
#line 715 "pixel_parse.rl"
	{ return RGB256(  0, 205, 102); }
	break;
	case 625:
#line 716 "pixel_parse.rl"
	{ return RGB256(  0, 139,  69); }
	break;
	case 626:
#line 717 "pixel_parse.rl"
	{ return RGB256(  0, 255, 127); }
	break;
	case 627:
#line 718 "pixel_parse.rl"
	{ return RGB256( 99, 184, 255); }
	break;
	case 628:
#line 719 "pixel_parse.rl"
	{ return RGB256( 92, 172, 238); }
	break;
	case 629:
#line 720 "pixel_parse.rl"
	{ return RGB256( 79, 148, 205); }
	break;
	case 630:
#line 721 "pixel_parse.rl"
	{ return RGB256( 54, 100, 139); }
	break;
	case 631:
#line 722 "pixel_parse.rl"
	{ return RGB256( 70, 130, 180); }
	break;
	case 632:
#line 723 "pixel_parse.rl"
	{ return RGB256(255, 165,  79); }
	break;
	case 633:
#line 724 "pixel_parse.rl"
	{ return RGB256(238, 154,  73); }
	break;
	case 634:
#line 725 "pixel_parse.rl"
	{ return RGB256(205, 133,  63); }
	break;
	case 635:
#line 726 "pixel_parse.rl"
	{ return RGB256(139,  90,  43); }
	break;
	case 636:
#line 727 "pixel_parse.rl"
	{ return RGB256(210, 180, 140); }
	break;
	case 637:
#line 728 "pixel_parse.rl"
	{ return RGB256(255, 225, 255); }
	break;
	case 638:
#line 729 "pixel_parse.rl"
	{ return RGB256(238, 210, 238); }
	break;
	case 639:
#line 730 "pixel_parse.rl"
	{ return RGB256(205, 181, 205); }
	break;
	case 640:
#line 731 "pixel_parse.rl"
	{ return RGB256(139, 123, 139); }
	break;
	case 641:
#line 732 "pixel_parse.rl"
	{ return RGB256(216, 191, 216); }
	break;
	case 642:
#line 733 "pixel_parse.rl"
	{ return RGB256(255,  99,  71); }
	break;
	case 643:
#line 734 "pixel_parse.rl"
	{ return RGB256(238,  92,  66); }
	break;
	case 644:
#line 735 "pixel_parse.rl"
	{ return RGB256(205,  79,  57); }
	break;
	case 645:
#line 736 "pixel_parse.rl"
	{ return RGB256(139,  54,  38); }
	break;
	case 646:
#line 737 "pixel_parse.rl"
	{ return RGB256(255,  99,  71); }
	break;
	case 647:
#line 738 "pixel_parse.rl"
	{ return RGB256(  0, 245, 255); }
	break;
	case 648:
#line 739 "pixel_parse.rl"
	{ return RGB256(  0, 229, 238); }
	break;
	case 649:
#line 740 "pixel_parse.rl"
	{ return RGB256(  0, 197, 205); }
	break;
	case 650:
#line 741 "pixel_parse.rl"
	{ return RGB256(  0, 134, 139); }
	break;
	case 651:
#line 742 "pixel_parse.rl"
	{ return RGB256( 64, 224, 208); }
	break;
	case 652:
#line 743 "pixel_parse.rl"
	{ return RGB256(238, 130, 238); }
	break;
	case 653:
#line 744 "pixel_parse.rl"
	{ return RGB256(255,  62, 150); }
	break;
	case 654:
#line 745 "pixel_parse.rl"
	{ return RGB256(238,  58, 140); }
	break;
	case 655:
#line 746 "pixel_parse.rl"
	{ return RGB256(205,  50, 120); }
	break;
	case 656:
#line 747 "pixel_parse.rl"
	{ return RGB256(139,  34,  82); }
	break;
	case 657:
#line 748 "pixel_parse.rl"
	{ return RGB256(208,  32, 144); }
	break;
	case 658:
#line 749 "pixel_parse.rl"
	{ return RGB256(255, 231, 186); }
	break;
	case 659:
#line 750 "pixel_parse.rl"
	{ return RGB256(238, 216, 174); }
	break;
	case 660:
#line 751 "pixel_parse.rl"
	{ return RGB256(205, 186, 150); }
	break;
	case 661:
#line 752 "pixel_parse.rl"
	{ return RGB256(139, 126, 102); }
	break;
	case 662:
#line 753 "pixel_parse.rl"
	{ return RGB256(245, 222, 179); }
	break;
	case 663:
#line 754 "pixel_parse.rl"
	{ return RGB256(245, 245, 245); }
	break;
	case 664:
#line 755 "pixel_parse.rl"
	{ return RGB256(255, 255,   0); }
	break;
	case 665:
#line 756 "pixel_parse.rl"
	{ return RGB256(238, 238,   0); }
	break;
	case 666:
#line 757 "pixel_parse.rl"
	{ return RGB256(205, 205,   0); }
	break;
	case 667:
#line 758 "pixel_parse.rl"
	{ return RGB256(139, 139,   0); }
	break;
	case 668:
#line 759 "pixel_parse.rl"
	{ return RGB256(154, 205,  50); }
	break;
	case 669:
#line 760 "pixel_parse.rl"
	{ return RGB256(255, 255,   0); }
	break;
#line 5257 "pixel_parse.cc"
		}
	}
	}

	_out: {}
	}

#line 765 "pixel_parse.rl"

  LOG(FATAL) << "Invalid color: " << name;
}

// For Emacs:
// Local Variables:
// mode:c++
// indent-tabs-mode:nil
// tab-width:2
// c-basic-offset:2
// c-file-style:nil
// End:
// For VIM:
// vim:set expandtab softtabstop=2 shiftwidth=2 tabstop=2:
